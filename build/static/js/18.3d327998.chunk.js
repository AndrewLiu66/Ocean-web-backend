(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[18],{1300:function(e,t,a){"use strict";a.r(t),a.d(t,"applyEdits",(function(){return u}));var r=a(209),s=a(186),i=a(146),n=a(148),d=a(135),o=a(168),l=a(264);async function u(e,t,a){let r,s,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const d={edits:a,result:new Promise(((e,t)=>{r=e,s=t}))};e.emit("apply-edits",d);try{var o;const{results:s,edits:d}=await p(e,t,a,i),l=e=>e.filter((e=>!e.error)).map(n.a),u={edits:d,addedFeatures:l(s.addFeatureResults),updatedFeatures:l(s.updateFeatureResults),deletedFeatures:l(s.deleteFeatureResults),addedAttachments:l(s.addAttachmentResults),updatedAttachments:l(s.updateAttachmentResults),deletedAttachments:l(s.deleteAttachmentResults)};return null!==(o=s.editedFeatureResults)&&void 0!==o&&o.length&&(u.editedFeatures=s.editedFeatureResults),(u.addedFeatures.length||u.updatedFeatures.length||u.deletedFeatures.length||u.addedAttachments.length||u.updatedAttachments.length||u.deletedAttachments.length)&&e.emit("edits",u),r(u),s}catch(u){throw s(u),u}}async function p(e,t,a,r){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))throw new i.a("".concat(e.type,"-layer:no-editing-support"),"Layer source does not support applyEdits capability",{layer:e});if(!e.editingEnabled)throw new i.a("".concat(e.type,"-layer:editing-disabled"),"Editing is disabled for layer",{layer:e});const{edits:n,options:o}=await async function(e,t,a){const r=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),n=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!r&&!n)throw new i.a("".concat(e.type,"-layer:missing-parameters"),"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&n)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&n)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const o={...a};if(null!=o.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(o.rollbackOnFailureEnabled=!0),!1===o.rollbackOnFailureEnabled&&"original-and-current-features"===o.returnServiceEditsOption)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&o.returnServiceEditsInSourceSR)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(o.returnServiceEditsInSourceSR&&"original-and-current-features"!==o.returnServiceEditsOption)throw new i.a("".concat(e.type,"-layer:invalid-parameter"),"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const l={...t};if(l.addFeatures=t&&s.a.isCollection(t.addFeatures)?t.addFeatures.toArray():l.addFeatures||[],l.updateFeatures=t&&s.a.isCollection(t.updateFeatures)?t.updateFeatures.toArray():l.updateFeatures||[],l.deleteFeatures=t&&s.a.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():l.deleteFeatures||[],l.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new i.a("".concat(e.type,"-layer:unsupported-operation"),"Layer does not support adding features.");if(l.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new i.a("".concat(e.type,"-layer:unsupported-operation"),"Layer does not support updating features.");if(l.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new i.a("".concat(e.type,"-layer:unsupported-operation"),"Layer does not support deleting features.");l.addAttachments=l.addAttachments||[],l.updateAttachments=l.updateAttachments||[],l.deleteAttachments=l.deleteAttachments||[],l.addFeatures=l.addFeatures.map(m),l.updateFeatures=l.updateFeatures.map(m);const u=a&&a.globalIdUsed;return l.addFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,u))),l.updateFeatures.forEach((t=>function(e,t,a){if(c(e,t,a),"geometry"in e&&Object(d.k)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new i.a("".concat(t.type,"-layer:unsupported-operation"),"Layer does not support geometry updates.")}(t,e,u))),l.deleteFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,u))),l.addAttachments.forEach((t=>h(t,e))),l.updateAttachments.forEach((t=>h(t,e))),{edits:await y(l),options:o}}(e,a,r);return n.addFeatures.length||n.updateFeatures.length||n.deleteFeatures.length||n.addAttachments.length||n.updateAttachments.length||n.deleteAttachments.length?{edits:n,results:await t.applyEdits(n,o)}:{edits:n,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function c(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&Object(d.k)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new i.a("".concat(t.type,"-layer:z-unsupported"),"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new i.a("".concat(t.type,"-layer:m-unsupported"),"Layer does not support m values while feature has m values.")}}function h(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name)&&!r.name)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=Object(o.h)(r.data);if(e&&!e.isBase64)throw new i.a("".concat(t.type,"-layer:invalid-parameter"),"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function y(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await Object(l.a)(r),i=t.length,n=a.length;return s.slice(0,i).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(i,i+n).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function m(e){const t=new r.a;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}}}]);