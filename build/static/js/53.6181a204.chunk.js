(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[53],{1319:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return T}));var i=n(136),o=n(143),a=n(148),r=n(158),s=n(139),l=(n(141),n(135),n(138),n(137)),c=n(170),u=n(864),d=n(267),f=n(865),_=n(342),m=n(231),v=n(396),p=n(406),h=n(266),g=n(398);const x=[102113,102100,3857,3785,900913],y=[0,0],b=o.a.getLogger("esri.views.2d.layers.WMTSLayerView2D");let S=class extends(Object(g.a)(Object(u.a)(Object(d.a)(h.a)))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this._tileRequests=new Map,this.layer=null}get tileMatrixSet(){const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(e.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=e.id),e):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){if(!this.tileMatrixSet)return;const{tileInfo:e}=this.tileMatrixSet;this._tileInfoView=new _.a(e),this._fetchQueue=new v.a({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new p.a({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.handles.add(Object(r.f)((()=>{var e,t;return[null===(e=this.layer)||void 0===e||null===(t=e.activeLayer)||void 0===t?void 0:t.styleId,this.tileMatrixSet]}),(()=>this._refresh())),this.declaredClass),super.attach()}detach(){var e,t;super.detach(),this.handles.remove(this.declaredClass),null!==(e=this._tileStrategy)&&void 0!==e&&e.destroy(),null!==(t=this._fetchQueue)&&void 0!==t&&t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}acquireTile(e){const t=this._bitmapView.createTile(e),n=t.bitmap;return[n.x,n.y]=this._tileInfoView.getTileCoords(y,t.key),n.resolution=this._tileInfoView.getTileResolution(t.key),[n.width,n.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}async doRefresh(){this.updateRequested||this.suspended||this._refresh()}isUpdating(){var e,t;return null!==(e=null===(t=this._fetchQueue)||void 0===t?void 0:t.updating)&&void 0!==e&&e}async fetchTile(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:i,resamplingLevel:o=0}=t;if(!n)return this._fetchImage(e,i);const r=new m.a(0,0,0,0);let s;try{await n.fetchAvailabilityUpsample(e.level,e.row,e.col,r,{signal:i}),s=await this._fetchImage(r,i)}catch(l){if(Object(a.j)(l))throw l;if(o<3){const n=this._tileInfoView.getTileParentId(e.id);if(n){const i=new m.a(n),a=await this.fetchTile(i,{...t,resamplingLevel:o+1});return Object(f.b)(this._tileInfoView,a,i,e)}}throw l}return Object(f.b)(this._tileInfoView,s,r,e)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}supportsSpatialReference(e){return this.layer.activeLayer.tileMatrixSets.some((t=>Object(c.d)(t.tileInfo.spatialReference,e)))}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){Object(a.j)(t)||b.error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}_refresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>{if(!e.bitmap.source)return;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then((t=>{e.bitmap.source=t})).catch((t=>{Object(a.j)(t)||(e.bitmap.source=null)})).finally((()=>{e.requestRender(),t.fulfilled=!0}))};this._tileRequests.set(e,t)}))}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let n=e.tileMatrixSets.find((e=>Object(c.d)(e.tileInfo.spatialReference,t)));return!n&&t.isWebMercator&&(n=e.tileMatrixSets.find((e=>x.includes(e.tileInfo.spatialReference.wkid)))),n}};Object(i.a)([Object(s.b)()],S.prototype,"_fetchQueue",void 0),Object(i.a)([Object(s.b)({readOnly:!0})],S.prototype,"tileMatrixSet",null),S=Object(i.a)([Object(l.a)("esri.views.2d.layers.WMTSLayerView2D")],S);const T=S},146:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return b})),n.d(t,"c",(function(){return x})),n.d(t,"d",(function(){return g})),n.d(t,"e",(function(){return f})),n.d(t,"f",(function(){return y})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return c})),n.d(t,"i",(function(){return l})),n.d(t,"j",(function(){return d})),n.d(t,"k",(function(){return s}));var i=n(145),o=n(183),a=n(142);const r=Object.keys(a.e).filter((e=>"number"==typeof a.e[e])).reduce(((e,t)=>({...e,[t]:a.e[t]})),{});function s(e){return e===a.e.OUTLINE_FILL||e===a.e.OUTLINE_FILL_SIMPLE}function l(e){return function(e){return e===a.e.SIMPLE||e===a.e.OUTLINE_FILL_SIMPLE}(e.symbologyType)}function c(e){return s(e.symbologyType)}function u(e,t){switch(e){case a.d.FILL:return h.from(t);case a.d.LINE:return x.from(t);case a.d.MARKER:return g.from(t);case a.d.TEXT:return y.from(t);case a.d.LABEL:return b.from(t);default:throw new Error("Unable to createMaterialKey for unknown geometryType ".concat(e))}}function d(e){switch(f.load(e).geometryType){case a.d.MARKER:return new g(e);case a.d.FILL:return new h(e);case a.d.LINE:return new x(e);case a.d.TEXT:return new y(e);case a.d.LABEL:return new b(e)}}class f{constructor(e){this._data=0,this._data=e}static load(e){const t=this.shared;return t.data=e,t}set data(e){this._data=e}get data(){return this._data}get geometryType(){return this.bits(8,11)}set geometryType(e){this.setBits(e,8,11)}get mapAligned(){return!!this.bit(20)}set mapAligned(e){this.setBit(20,e)}get sdf(){return!!this.bit(11)}set sdf(e){this.setBit(11,e)}get pattern(){return!!this.bit(12)}set pattern(e){this.setBit(12,e)}get textureBinding(){return this.bits(0,8)}set textureBinding(e){this.setBits(e,0,8)}get symbologyType(){return this.bits(21,26)}set symbologyType(e){this.setBits(e,21,26)}get geometryTypeString(){switch(this.geometryType){case a.d.FILL:return"fill";case a.d.MARKER:return"marker";case a.d.LINE:return"line";case a.d.TEXT:return"text";case a.d.LABEL:return"label";default:throw new i.a("Unable to handle unknown geometryType: ".concat(this.geometryType))}}setBit(e,t){const n=1<<e;t?this._data|=n:this._data&=~n}bit(e){return(this._data&1<<e)>>e}setBits(e,t,n){for(let i=t,o=0;i<n;i++,o++)this.setBit(i,0!=(e&1<<o))}bits(e,t){let n=0;for(let i=e,o=0;i<t;i++,o++)n|=this.bit(i)<<o;return n}hasVV(){return!1}setVV(e,t){}getVariation(){return{mapAligned:this.mapAligned,pattern:this.pattern,sdf:this.sdf,symbologyType:{value:a.e[this.symbologyType],options:r,namespace:"SYMBOLOGY_TYPE"}}}getVariationHash(){return this._data&~(7&this.textureBinding)}}f.shared=new f(0);const _=e=>class extends e{get vvSizeMinMaxValue(){return 0!==this.bit(16)}set vvSizeMinMaxValue(e){this.setBit(16,e)}get vvSizeScaleStops(){return 0!==this.bit(17)}set vvSizeScaleStops(e){this.setBit(17,e)}get vvSizeFieldStops(){return 0!==this.bit(18)}set vvSizeFieldStops(e){this.setBit(18,e)}get vvSizeUnitValue(){return 0!==this.bit(19)}set vvSizeUnitValue(e){this.setBit(19,e)}hasVV(){return super.hasVV()||this.vvSizeMinMaxValue||this.vvSizeScaleStops||this.vvSizeFieldStops||this.vvSizeUnitValue}setVV(e,t){super.setVV(e,t);const n=function(e,t,n){const i=a.f.SIZE_FIELD_STOPS|a.f.SIZE_MINMAX_VALUE|a.f.SIZE_SCALE_STOPS|a.f.SIZE_UNIT_VALUE,o=(t&(a.g.FIELD_TARGETS_OUTLINE|a.g.MINMAX_TARGETS_OUTLINE|a.g.SCALE_TARGETS_OUTLINE|a.g.UNIT_TARGETS_OUTLINE))>>>4;return e===a.d.LINE&&n.isOutline||e===a.d.FILL&&s(n.symbologyType)?i&o:i&~o}(this.geometryType,e,t)&e;this.vvSizeMinMaxValue=!!(n&a.f.SIZE_MINMAX_VALUE),this.vvSizeFieldStops=!!(n&a.f.SIZE_FIELD_STOPS),this.vvSizeUnitValue=!!(n&a.f.SIZE_UNIT_VALUE),this.vvSizeScaleStops=!!(n&a.f.SIZE_SCALE_STOPS)}},m=e=>class extends e{get vvRotation(){return 0!==this.bit(15)}set vvRotation(e){this.setBit(15,e)}hasVV(){return super.hasVV()||this.vvRotation}setVV(e,t){super.setVV(e,t),this.vvRotation=!t.isOutline&&!!(e&a.f.ROTATION)}},v=e=>class extends e{get vvColor(){return 0!==this.bit(13)}set vvColor(e){this.setBit(13,e)}hasVV(){return super.hasVV()||this.vvColor}setVV(e,t){super.setVV(e,t),this.vvColor=!t.isOutline&&!!(e&a.f.COLOR)}},p=e=>class extends e{get vvOpacity(){return 0!==this.bit(14)}set vvOpacity(e){this.setBit(14,e)}hasVV(){return super.hasVV()||this.vvOpacity}setVV(e,t){super.setVV(e,t),this.vvOpacity=!t.isOutline&&!!(e&a.f.OPACITY)}};class h extends(v(p(_(f)))){static load(e){const t=this.shared;return t.data=e,t}static from(e){const{symbologyType:t,vvFlags:n}=e,i=this.load(0);return i.geometryType=a.d.FILL,i.symbologyType=t,t!==a.e.DOT_DENSITY&&i.setVV(n,e),i.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}h.shared=new h(0);class g extends(v(p(m(_(f))))){static load(e){const t=this.shared;return t.data=e,t}static from(e){const{symbologyType:t,vvFlags:n}=e,i=this.load(0);return i.geometryType=a.d.MARKER,i.symbologyType=t,t!==a.e.HEATMAP&&i.setVV(n,e),i.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvRotation:this.vvRotation,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}g.shared=new g(0);class x extends(v(p(_(f)))){static load(e){const t=this.shared;return t.data=e,t}static from(e){const t=this.load(0);return t.geometryType=a.d.LINE,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}x.shared=new x(0);class y extends(v(p(m(_(f))))){static load(e){const t=this.shared;return t.data=e,t}static from(e){const t=this.load(0);return t.geometryType=a.d.TEXT,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.data}getVariation(){return{...super.getVariation(),vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvRotation:this.vvRotation,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}y.shared=new y(0);class b extends(_(f)){static load(e){const t=this.shared;return t.data=e,t}static from(e){const t=this.load(0);return t.geometryType=a.d.LABEL,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.mapAligned=Object(o.i)(e.placement),t.data}getVariation(){return{...super.getVariation(),vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue}}}b.shared=new b(0)},152:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(){this.name=this.constructor.name||"UnnamedBrush"}prepareState(e,t,n){}draw(e,t,n){}drawMany(e,t,n){for(const i of t)this.draw(e,i,n)}}},168:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return x})),n.d(t,"c",(function(){return g}));var i=n(145),o=n(142),a=n(146),r=n(180),s=n(134),l=n(164),c=n(144),u=n(140);class d extends r.a{static getStorageSpec(e){let{attributes:t}=e;return{visualVariables:!1,attributes:null!==t&&void 0!==t?t:null}}static _createRendererSchema(){return{type:"dot-density",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}static createOrUpdateRendererSchema(e,t){const{attributes:n,dotValue:i,referenceScale:o,dotSize:a,dotBlendingEnabled:r,seed:u,backgroundColor:d}=t,f=Object(s.k)(e)&&"dot-density"===e.type?e:this._createRendererSchema();f.dotValue=i,f.dotSize=a,f.dotScale=o,f.dotBlending=r,f.seed=u;const{colors:_,activeDots:m,backgroundColor:v}=f;for(let s=0;s<c.r;s++){const e=s>=n.length?null:n[s].color;Object(l.e)(_,e,4*s)}for(let s=0;s<8;s++)m[s]=s<t.attributes.length?1:0;return Object(l.e)(v,d),f}static getVariation(e){return{ddDotBlending:e.dotBlending}}static getVariationHash(e){return e.dotBlending?1:0}}d.type="dot-density",d.programSpec={shader:"materials/fill",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:u.k.SHORT},{location:1,name:"a_id",count:3,type:u.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:u.k.UNSIGNED_BYTE},{location:3,name:"a_inverseArea",count:1,type:u.k.FLOAT}]}};var f=n(149),_=n(324);class m extends r.a{static getStorageSpec(e){let{field:t,valueExpression:n}=e;return{visualVariables:!1,attributes:t||n?[{field:t,valueExpression:n}]:null}}static _createRendererSchema(){return{type:"heatmap",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:"invalid"}}static createOrUpdateRendererSchema(e,t){const{radius:n,minDensity:i,maxDensity:o,referenceScale:a,field:r,valueExpression:l,colorStops:c}=t,u=o-i,d=r||l?1:0,m=c.map((e=>{let{color:t,ratio:n}=e;return"".concat(n,":").concat(t.toString())})).join();let v,p=!0;return Object(s.k)(e)&&"heatmap"===e.type?(v=e,p=m!==e.gradientHash):v=this._createRendererSchema(),v.radius=Object(f.c)(n),v.minDensity=i,v.densityRange=u,v.referenceScale=a,v.isFieldActive=d,p&&(v.gradient=Object(_.g)(c),v.gradientHash=m),v}}m.type="heatmap",m.programSpec={shader:"materials/icon/heatmapAccumulate",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:u.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:u.k.SHORT},{location:4,name:"a_id",count:4,type:u.k.UNSIGNED_BYTE}]}};var v=n(179);class p extends r.a{static getStorageSpec(e){let{attributes:t}=e;return{visualVariables:!0,attributes:null!==t&&void 0!==t?t:null}}static _createRendererSchema(){return{type:"pie-chart",colors:new Float32Array(4*c.p),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}static createOrUpdateRendererSchema(e,t){const{attributes:n,defaultColor:i,holePercentage:o,othersCategory:a,outline:r}=t,u=Object(s.k)(e)&&"pie-chart"===e.type?e:this._createRendererSchema();for(let s=0;s<c.p;s++){const e=s>=n.length?new v.a([0,0,0,0]):n[s].color;Object(l.e)(u.colors,e,4*s)}return Object(l.e)(u.defaultColor,i),Object(l.e)(u.othersColor,null===a||void 0===a?void 0:a.color),Object(l.e)(u.outlineColor,null===r||void 0===r?void 0:r.color),u.outlineWidth=Object(f.c)((null===r||void 0===r?void 0:r.width)||0),u.holePercentage=o,u.sectorThreshold=(null===a||void 0===a?void 0:a.threshold)||0,u.numberOfFields=n.length,u}static getVariation(e){return{numberOfFields:e.numberOfFields}}static getVariationHash(e){return e.numberOfFields}}function h(e,t){if(e.type!==t)throw new i.a("material-view-model:unexpected-renderer-schema",'expected to find renderer schema of type "'.concat(t,'" but found type "').concat(e.type,'"'))}function g(e){switch(e.type){case"dot-density":return d;case"heatmap":return m;case"pie-chart":return p;default:return r.a}}function x(e){const{geometryType:t,symbologyType:n}=a.e.load(e);switch(t){case o.d.FILL:if(n===o.e.DOT_DENSITY)return d;break;case o.d.MARKER:switch(n){case o.e.HEATMAP:return m;case o.e.PIE_CHART:return p}}return r.a}p.type="pie-chart",p.programSpec={shader:"materials/pie",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:u.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:u.k.SHORT},{location:2,name:"a_texCoords",count:2,type:u.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:u.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:u.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:u.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:u.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:u.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:u.k.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]}},177:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n(208),o=n(135),a=n(134),r=n(148);const s=1/Object(o.a)("mapview-transitions-duration");class l extends i.a{constructor(){super(...arguments),this._fadeOutResolver=null,this._fadeInResolver=null,this._clips=null,this.computedVisible=!0,this.computedOpacity=1,this.fadeTransitionEnabled=!1,this.inFadeTransition=!1,this._isReady=!1,this._opacity=1,this._stage=null,this._visible=!0}get clips(){return this._clips}set clips(e){this._clips=e,this.requestRender()}get isReady(){return this._isReady}get opacity(){return this._opacity}set opacity(e){this._opacity!==e&&(this._opacity=Math.min(1,Math.max(e,0)),this.requestRender())}get stage(){return this._stage}set stage(e){if(this._stage===e)return;const t=this._stage;this._stage=e,e?this._stage.untrashDisplayObject(this)||(this.onAttach(),this.emit("attach")):t.trashDisplayObject(this)}get transforms(){return this._getTransforms()}_getTransforms(){return Object(a.j)(this._transforms)&&(this._transforms=this._createTransforms()),this._transforms}get visible(){return this._visible}set visible(e){this._visible!==e&&(this._visible=e,this.requestRender())}fadeIn(){return this._fadeInResolver||(this._fadeOutResolver&&(this._fadeOutResolver(),this._fadeOutResolver=null),this.computedOpacity=0,this.fadeTransitionEnabled=!0,this._fadeInResolver=Object(r.d)(),this.requestRender()),this._fadeInResolver.promise}fadeOut(){return this._fadeOutResolver||(this._fadeInResolver&&(this._fadeInResolver(),this._fadeInResolver=null),this.fadeTransitionEnabled=!0,this._fadeOutResolver=Object(r.d)(),this.requestRender()),this._fadeOutResolver.promise}beforeRender(e){this.updateTransitionProperties(e.deltaTime,e.state.scale)}afterRender(e){this._fadeInResolver&&this.computedOpacity===this.opacity?(this._fadeInResolver(),this._fadeInResolver=null):this._fadeOutResolver&&0===this.computedOpacity&&(this._fadeOutResolver(),this._fadeOutResolver=null)}remove(){var e;null===(e=this.parent)||void 0===e||e.removeChild(this)}setTransform(e){}processRender(e){this.stage&&this.computedVisible&&this.doRender(e)}requestRender(){this.stage&&this.stage.requestRender()}processDetach(){this._fadeInResolver&&(this._fadeInResolver(),this._fadeInResolver=null),this._fadeOutResolver&&(this._fadeOutResolver(),this._fadeOutResolver=null),this.onDetach(),this.emit("detach")}updateTransitionProperties(e,t){if(this.fadeTransitionEnabled){const t=this._fadeOutResolver||!this.visible?0:this.opacity,n=this.computedOpacity;if(n===t)this.computedVisible=this.visible;else{const i=e*s;this.computedOpacity=n>t?Math.max(t,n-i):Math.min(t,n+i),this.computedVisible=this.computedOpacity>0;const o=t===this.computedOpacity;this.inFadeTransition=!o,o||this.requestRender()}}else this.computedOpacity=this.opacity,this.computedVisible=this.visible}onAttach(){}onDetach(){}doRender(e){}ready(){this._isReady||(this._isReady=!0,this.emit("isReady"),this.requestRender())}}},178:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return m})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return d})),n.d(t,"i",(function(){return u})),n.d(t,"j",(function(){return o}));var i,o,a,r,s,l,c,u,d,f,_=n(154);(f=i||(i={}))[f.BACKGROUND=0]="BACKGROUND",f[f.FILL=1]="FILL",f[f.LINE=2]="LINE",f[f.SYMBOL=3]="SYMBOL",f[f.CIRCLE=4]="CIRCLE",function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(o||(o={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(a||(a={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(r||(r={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(s||(s={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(l||(l={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(c||(c={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(u||(u={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(d||(d={}));class m{}m.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:o.VISIBLE}},m.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:o.VISIBLE}},m.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:o.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:_.e.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:_.p.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},m.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:o.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:a.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:r.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:s.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:r.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:c.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[d.HORIZONTAL]}},m.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:o.VISIBLE}},m.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},m.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},m.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"line-width":{type:"number",minimum:0,default:1}},m.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},m.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},m.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}}},180:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(134);class o{static getStorageSpec(e){return null}static createOrUpdateRendererSchema(e,t){return Object(i.k)(e)&&"default"===e.type?e:{type:"default"}}static getVariation(e){return{}}static getVariationHash(e){return 0}}o.type="default",o.programSpec=null},183:function(e,t,n){"use strict";var i,o;function a(e){switch(e){case"left":return i.Left;case"right":return i.Right;case"center":return i.Center}}function r(e){switch(e){case"top":return o.Top;case"middle":return o.Center;case"baseline":return o.Baseline;case"bottom":return o.Bottom}}function s(e){switch(e){case"above-left":case"esriServerPointLabelPlacementAboveLeft":return[i.Right,o.Bottom];case"above-center":case"above-along":case"esriServerPointLabelPlacementAboveCenter":case"esriServerLinePlacementAboveAlong":return[i.Center,o.Bottom];case"above-right":case"esriServerPointLabelPlacementAboveRight":return[i.Left,o.Bottom];case"center-left":case"esriServerPointLabelPlacementCenterLeft":return[i.Right,o.Center];case"center-center":case"center-along":case"esriServerPointLabelPlacementCenterCenter":case"esriServerLinePlacementCenterAlong":case"always-horizontal":case"esriServerPolygonPlacementAlwaysHorizontal":return[i.Center,o.Center];case"center-right":case"esriServerPointLabelPlacementCenterRight":return[i.Left,o.Center];case"below-left":case"esriServerPointLabelPlacementBelowLeft":return[i.Right,o.Top];case"below-center":case"below-along":case"esriServerPointLabelPlacementBelowCenter":case"esriServerLinePlacementBelowAlong":return[i.Center,o.Top];case"below-right":case"esriServerPointLabelPlacementBelowRight":return[i.Left,o.Top];default:return console.debug("Found invalid placement type ".concat(e)),[i.Center,o.Center]}}function l(e){switch(e){case i.Right:return-1;case i.Center:return 0;case i.Left:return 1;default:return console.debug("Found invalid horizontal alignment ".concat(e)),0}}function c(e){switch(e){case o.Top:return 1;case o.Center:return 0;case o.Bottom:case o.Baseline:return-1;default:return console.debug("Found invalid vertical alignment ".concat(e)),0}}function u(e){switch(e){case"left":return i.Left;case"right":return i.Right;case"center":return i.Center}}function d(e){switch(e){case"above-along":case"below-along":case"center-along":case"esriServerLinePlacementAboveAlong":case"esriServerLinePlacementBelowAlong":case"esriServerLinePlacementCenterAlong":return!0;default:return!1}}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return u})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return l})),n.d(t,"g",(function(){return r})),n.d(t,"h",(function(){return c})),n.d(t,"i",(function(){return d})),function(e){e[e.Left=-1]="Left",e[e.Center=0]="Center",e[e.Right=1]="Right"}(i||(i={})),function(e){e[e.Top=1]="Top",e[e.Center=0]="Center",e[e.Bottom=-1]="Bottom",e[e.Baseline=2]="Baseline"}(o||(o={}))},187:function(e,t,n){"use strict";function i(){return new Float32Array(4)}function o(e,t,n,i){const o=new Float32Array(4);return o[0]=e,o[1]=t,o[2]=n,o[3]=i,o}function a(){return i()}function r(){return o(1,1,1,1)}function s(){return o(1,0,0,0)}function l(){return o(0,1,0,0)}function c(){return o(0,0,1,0)}function u(){return o(0,0,0,1)}n.d(t,"a",(function(){return o}));const d=a(),f=r(),_=s(),m=l(),v=c(),p=u();Object.freeze(Object.defineProperty({__proto__:null,create:i,clone:function(e){const t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},fromValues:o,createView:function(e,t){return new Float32Array(e,t,4)},zeros:a,ones:r,unitX:s,unitY:l,unitZ:c,unitW:u,ZEROS:d,ONES:f,UNIT_X:_,UNIT_Y:m,UNIT_Z:v,UNIT_W:p},Symbol.toStringTag,{value:"Module"}))},190:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(238);function o(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new i.a(e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},191:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n(159),o=n(140),a=n(160),r=n(199);class s{constructor(e,t){this.rctx=e,this._vertexBuffer=i.a.createVertex(e,o.D.STATIC_DRAW,new Uint16Array(t)),this._vao=new a.a(e,new Map([["a_position",0]]),{geometry:[new r.a("a_position",2,o.k.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=t.length/2}bind(){this.rctx.bindVAO(this._vao)}unbind(){this.rctx.bindVAO(null)}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(o.r.TRIANGLE_STRIP,0,this._count)}}},195:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(207);const o={shaders:{vertexShader:Object(i.a)("background/background.vert"),fragmentShader:Object(i.a)("background/background.frag")},attributes:new Map([["a_pos",0]])}},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return s}));Number.POSITIVE_INFINITY;const i=Math.PI,o=128/i,a=1/Math.LN2;function r(e,t){return(e%=t)>=0?e:e+t}function s(e){return r(e*o,256)}function l(e){return r(.7111111111111111*e,256)}function c(e){return Math.log(e)*a}function u(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},207:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));const i={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},heatmap:{heatmapResolve:{"heatmapResolve.frag":"precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}","heatmapResolve.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nvarying vec2 v_uv;\nconst float UV_TO_TILE_SPACE = 512.;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos * UV_TO_TILE_SPACE, 1.)).xy, 1., 1.);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp sampler2D u_attributeData4;\nuniform highp sampler2D u_attributeData5;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nhighp vec4 getAttributeData4(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData4, coords);\n}\nhighp vec4 getAttributeData5(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData5, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","barycentric.glsl":"float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif"},icon:{"common.glsl":"#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif",heatmapAccumulate:{"common.glsl":"varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;","heatmapAccumulate.frag":"precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}","heatmapAccumulate.vert":"precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\nconst float TILE_TO_CLIP_SPACE = 2.0 / 512.0;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = vec3(a_pos * POSITION_PRECISION * TILE_TO_CLIP_SPACE - 1.0, 1.0);\nvec3 vertexPos = centerPos + vec3(v_offsetFromCenter, 0.0) * u_radius * TILE_TO_CLIP_SPACE;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},"hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},pie:{"pie.frag":"precision mediump float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\nuniform lowp vec4 u_defaultColor;\nuniform lowp vec4 u_othersColor;\nuniform lowp vec4 u_outlineColor;\nuniform float u_donutRatio;\nuniform float u_sectorThreshold;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\n#if __VERSION__ == 300\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn u_colors[colorIndex];\n#else\nmediump int colorIndex;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == index) {\ncolorIndex = int(filteredSectorToColorId[i].y);\n}\n}\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == colorIndex) {\nreturn u_colors[i];\n}\n}\nreturn u_colors[NUMBER_OF_FIELDS - 1];\n#endif\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = u_outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","pie.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\nuniform float u_outlineWidth;\nuniform mediump float u_sectorThreshold;\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nint filter(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\nif (sectorAngle > u_sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\n#if __VERSION__ == 300\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\nif (i == filteredInfo.colorId) {\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\n}\n}\n#endif\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[NUMBER_OF_FIELDS]) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/hittest/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat outlineSize = u_outlineWidth;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(size.x, size.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData0 = getAttributeData3(a_id);\nattributeData[0] = filterNaNValues(attributeData0.x);\nattributeData[1] = filterNaNValues(attributeData0.y);\nattributeData[2] = filterNaNValues(attributeData0.z);\nattributeData[3] = filterNaNValues(attributeData0.w);\n#if (NUMBER_OF_FIELDS > 4)\nvec4 attributeData1 = getAttributeData4(a_id);\nattributeData[4] = filterNaNValues(attributeData1.x);\nattributeData[5] = filterNaNValues(attributeData1.y);\nattributeData[6] = filterNaNValues(attributeData1.z);\nattributeData[7] = filterNaNValues(attributeData1.w);\n#endif\n#if (NUMBER_OF_FIELDS > 8)\nvec4 attributeData2 = getAttributeData5(a_id);\nattributeData[8] = filterNaNValues(attributeData2.x);\nattributeData[9] = filterNaNValues(attributeData2.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[NUMBER_OF_FIELDS];\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\n#if __VERSION__ == 300\nv_filteredSectorToColorId = filteredSectorToColorId;\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == numOfEntries) {\nbreak;\n}\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\n}\n#endif\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},shared:{line:{"common.glsl":"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},"symbologyTypeUtils.glsl":"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif",text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef SUPPORTS_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},overlay:{overlay:{"overlay.frag":"precision lowp float;\nuniform lowp sampler2D u_texture;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_texture, v_uv);\ngl_FragColor = color *  u_opacity;\n}","overlay.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nuniform highp mat3 u_dvsMat3;\nvarying mediump vec2 v_uv;\nvoid main(void) {\nv_uv = a_uv;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\ngl_Position = vec4(pos.xy, 0.0, 1.0);\n}"}},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"getFadeOpacity.glsl":"uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}","getFragmentColor.glsl":"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}",imagery:{"imagery.frag":"precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}","imagery.vert":"attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},particles:{"particles.frag":"precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}","particles.vert":"attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}"},streamlines:{"streamlines.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}","streamlines.vert":"attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}"},"vv.glsl":"#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"atan2.glsl":"float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}","encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};const o=new(n(242).a)((function(e){let t=i;return e.split("/").forEach((e=>{t&&(t=t[e])})),t}));function a(e){return o.resolveIncludes(e)}},210:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return r}));var i=n(140),o=n(199);const a={geometry:[new o.a("a_pos",2,i.k.BYTE,0,2)]},r={geometry:[new o.a("a_pos",2,i.k.BYTE,0,4),new o.a("a_tex",2,i.k.BYTE,2,4)]},s={geometry:[new o.a("a_pos",2,i.k.UNSIGNED_SHORT,0,4)]}},213:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(157),o=n(252),a=n(177);class r extends a.a{constructor(){super(...arguments),this._childrenSet=new Set,this._needsSort=!1,this.children=[],this._effectView=null}get blendMode(){return this._blendMode}set blendMode(e){this._blendMode=e,this.requestRender()}get clips(){return this._clips}set clips(e){this._clips=e,this.children.forEach((t=>t.clips=e))}get computedEffects(){var e,t;return null!==(e=null===(t=this._effectView)||void 0===t?void 0:t.effects)&&void 0!==e?e:null}get effect(){var e,t;return null!==(e=null===(t=this._effectView)||void 0===t?void 0:t.effect)&&void 0!==e?e:""}set effect(e){(this._effectView||e)&&(this._effectView||(this._effectView=new o.a),this._effectView.effect=e,this.requestRender())}updateTransitionProperties(e,t){super.updateTransitionProperties(e,t),this._effectView&&(this._effectView.transitionStep(e,t),this._effectView.transitioning&&this.requestRender())}doRender(e){const t=this.createRenderParams(e);this.renderChildren(t)}addChild(e){return this.addChildAt(e,this.children.length)}addChildAt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.children.length;if(!e)return e;if(this.contains(e))return e;this._needsSort=!0;const n=e.parent;return n&&n!==this&&n.removeChild(e),t>=this.children.length?this.children.push(e):this.children.splice(t,0,e),this._childrenSet.add(e),e.parent=this,e.stage=this.stage,this!==this.stage&&(e.clips=this.clips),this.requestRender(),e}contains(e){return this._childrenSet.has(e)}removeAllChildren(){this._childrenSet.clear(),this._needsSort=!0;for(const e of this.children)this!==this.stage&&(e.clips=null),e.stage=null,e.parent=null;this.children.length=0}removeChild(e){return this.contains(e)?this.removeChildAt(this.children.indexOf(e)):e}removeChildAt(e){if(e<0||e>=this.children.length)return null;this._needsSort=!0;const t=this.children.splice(e,1)[0];return this._childrenSet.delete(t),this!==this.stage&&(t.clips=null),t.stage=null,t.parent=null,t}sortChildren(e){this._needsSort&&(this.children.sort(e),this._needsSort=!1)}_createTransforms(){return{dvs:Object(i.b)()}}onAttach(){super.onAttach();const e=this.stage;for(const t of this.children)t.stage=e}onDetach(){super.onDetach();for(const e of this.children)e.stage=null}renderChildren(e){for(const t of this.children)t.beforeRender(e);for(const t of this.children)t.processRender(e);for(const t of this.children)t.afterRender(e)}createRenderParams(e){return{...e,blendMode:this.blendMode,effects:this.computedEffects,globalOpacity:e.globalOpacity*this.computedOpacity,inFadeTransition:this.inFadeTransition}}}},214:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return f})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return m})),n.d(t,"h",(function(){return _})),n.d(t,"i",(function(){return v})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p}));var i=n(215),o=n(198),a=n(140),r=(n(193),n(172));function s(e,t){var n;let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=!(s&&"u8"===t.pixelType),c=l?a.q.FLOAT:a.q.UNSIGNED_BYTE,u=null==t.pixels||0===t.pixels.length?null:l?t.getAsRGBAFloat():t.getAsRGBA(),d=null===(n=e.capabilities.textureFloat)||void 0===n?void 0:n.textureFloatLinear,f={width:t.width,height:t.height,target:a.A.TEXTURE_2D,pixelFormat:a.p.RGBA,internalFormat:e.type===o.a.WEBGL2&&l?a.v.RGBA32F:a.p.RGBA,samplingMode:!d||"bilinear"!==i&&"cubic"!==i?a.z.NEAREST:a.z.LINEAR,dataType:c,wrapMode:a.B.CLAMP_TO_EDGE,flipped:!1};return new r.a(e,f,u)}function l(e,t){const{spacing:n,offsets:i,coefficients:s,size:[l,c]}=t,u=n[0]>1,d={width:u?4*l:l,height:c,target:a.A.TEXTURE_2D,pixelFormat:a.p.RGBA,internalFormat:e.type===o.a.WEBGL2?a.v.RGBA32F:a.p.RGBA,dataType:a.q.FLOAT,samplingMode:a.z.NEAREST,wrapMode:a.B.CLAMP_TO_EDGE,flipped:!1},f=new Float32Array(u?l*c*16:2*i.length);if(u)for(let o=0,a=0;o<s.length;o++)f[a++]=s[o],o%3==2&&(f[a++]=1);else for(let o=0;o<c;o++)for(let e=0;e<l;e++){const t=4*(o*l+e),n=2*(e*c+o);f[t]=i[n],f[t+1]=i[n+1],f[t+3]=-1===i[n]?0:1}return new r.a(e,d,f)}function c(e,t){const n={width:t.length/4,height:1,target:a.A.TEXTURE_2D,pixelFormat:a.p.RGBA,internalFormat:a.p.RGBA,dataType:a.q.UNSIGNED_BYTE,samplingMode:a.z.NEAREST,wrapMode:a.B.CLAMP_TO_EDGE,flipped:!1};return new r.a(e,n,t)}function u(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];return{u_flipY:a,u_applyTransform:!!e,u_opacity:o,u_transformSpacing:e?e.spacing:i.a,u_transformGridSize:e?e.size:i.a,u_targetImageSize:t,u_srcImageSize:n}}function d(e,t){return{u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:0}}function f(e,t){return{u_scale:e,u_offset:t}}function _(e){return{u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function m(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function v(e,t){const n=e.gl,i=t.glName,o=n.getProgramParameter(i,n.ACTIVE_UNIFORMS),a=new Map;let r;for(let s=0;s<o;s++)r=n.getActiveUniform(i,s),r&&a.set(r.name,{location:n.getUniformLocation(i,r.name),info:r});return a}function p(e,t,n){Object.keys(n).forEach((i=>{const o=t.get(i)||t.get(i+"[0]");o&&function(e,t,n,i){if(null===i||null==n)return!1;const{info:o}=i;switch(o.type){case a.C.FLOAT:o.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case a.C.FLOAT_VEC2:e.setUniform2fv(t,n);break;case a.C.FLOAT_VEC3:e.setUniform3fv(t,n);break;case a.C.FLOAT_VEC4:e.setUniform4fv(t,n);break;case a.C.FLOAT_MAT3:e.setUniformMatrix3fv(t,n);break;case a.C.FLOAT_MAT4:e.setUniformMatrix4fv(t,n);break;case a.C.INT:o.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case a.C.BOOL:e.setUniform1i(t,n?1:0);break;case a.C.INT_VEC2:case a.C.BOOL_VEC2:e.setUniform2iv(t,n);break;case a.C.INT_VEC3:case a.C.BOOL_VEC3:e.setUniform3iv(t,n);break;case a.C.INT_VEC4:case a.C.BOOL_VEC4:e.setUniform4iv(t,n);break;default:return!1}}(e,i,n[i],o)}))}function h(e,t,n,i){n.length===i.length&&(i.some((e=>null==e))||n.some((e=>null==e))||n.forEach(((n,o)=>{t.setUniform1i(n,o),e.bindTexture(i[o],o)})))}},222:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var i=n(134),o=n(187),a=n(210),r=n(152),s=n(195),l=n(159),c=n(140),u=n(190),d=n(160);class f extends r.a{constructor(){super(...arguments),this._color=Object(o.a)(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState(e,t){let{context:n}=e;n.setDepthWriteEnabled(!1),n.setDepthTestEnabled(!1),n.setStencilTestEnabled(!0),n.setBlendingEnabled(!1),n.setColorMask(!1,!1,!1,!1),n.setStencilOp(c.w.KEEP,c.w.KEEP,c.w.REPLACE),n.setStencilWriteMask(255),n.setStencilFunctionSeparate(c.n.FRONT_AND_BACK,c.h.GREATER,t.stencilRef,255)}draw(e,t){const{context:n,requestRender:o}=e;this._initialized||this._initialize(n),!Object(i.k)(o)||this._solidProgram.isCompiled?(n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(c.r.TRIANGLE_STRIP,0,4),n.bindVAO()):o()}_initialize(e){if(this._initialized)return!0;const t=Object(u.a)(e,s.a);if(!t)return!1;const n=new Int8Array([0,0,1,0,0,1,1,1]),i=l.a.createVertex(e,c.D.STATIC_DRAW,n),o=new d.a(e,s.a.attributes,a.a,{geometry:i});return this._solidProgram=t,this._solidVertexArrayObject=o,this._initialized=!0,!0}}},224:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i,o,a,r={exports:{}};i=r,o=function(){function e(e,n,o){o=o||2;var a,r,s,c,u,d,f,_=n&&n.length,m=_?n[0]*o:e.length,v=t(e,0,m,o,!0),p=[];if(!v||v.next===v.prev)return p;if(_&&(v=l(e,n,v,o)),e.length>80*o){a=s=e[0],r=c=e[1];for(var h=o;h<m;h+=o)(u=e[h])<a&&(a=u),(d=e[h+1])<r&&(r=d),u>s&&(s=u),d>c&&(c=d);f=0!==(f=Math.max(s-a,c-r))?1/f:0}return i(v,p,o,a,r,f),p}function t(e,t,n,i,o){var a,r;if(o===A(e,t,n,i)>0)for(a=t;a<n;a+=i)r=E(a,e[a],e[a+1],r);else for(a=n-i;a>=t;a-=i)r=E(a,e[a],e[a+1],r);if(r&&x(r,r.next)){var s=r.next;I(r),r=s}return r}function n(e,t){if(!e)return e;t||(t=e);var n,i=e;do{if(n=!1,i.steiner||!x(i,i.next)&&0!==g(i.prev,i,i.next))i=i.next;else{var o=i.prev;if(I(i),(i=t=o)===i.next)break;n=!0}}while(n||i!==t);return t}function i(e,t,l,c,u,d,f){if(e){!f&&d&&_(e,c,u,d);for(var m,v,p=e;e.prev!==e.next;)if(m=e.prev,v=e.next,d?a(e,c,u,d):o(e))t.push(m.i/l),t.push(e.i/l),t.push(v.i/l),I(e),e=v.next,p=v.next;else if((e=v)===p){f?1===f?i(e=r(n(e),t,l),t,l,c,u,d,2):2===f&&s(e,t,l,c,u,d):i(n(e),t,l,c,u,d,1);break}}}function o(e){var t=e.prev,n=e,i=e.next;if(g(t,n,i)>=0)return!1;for(var o=e.next.next;o!==e.prev;){if(p(t.x,t.y,n.x,n.y,i.x,i.y,o.x,o.y)&&g(o.prev,o,o.next)>=0)return!1;o=o.next}return!0}function a(e,t,n,i){var o=e.prev,a=e,r=e.next;if(g(o,a,r)>=0)return!1;for(var s=o.x<a.x?o.x<r.x?o.x:r.x:a.x<r.x?a.x:r.x,l=o.y<a.y?o.y<r.y?o.y:r.y:a.y<r.y?a.y:r.y,c=o.x>a.x?o.x>r.x?o.x:r.x:a.x>r.x?a.x:r.x,u=o.y>a.y?o.y>r.y?o.y:r.y:a.y>r.y?a.y:r.y,d=m(s,l,t,n,i),f=m(c,u,t,n,i),_=e.prevZ,v=e.nextZ;_&&_.z>=d&&v&&v.z<=f;){if(_!==e.prev&&_!==e.next&&p(o.x,o.y,a.x,a.y,r.x,r.y,_.x,_.y)&&g(_.prev,_,_.next)>=0)return!1;if(_=_.prevZ,v!==e.prev&&v!==e.next&&p(o.x,o.y,a.x,a.y,r.x,r.y,v.x,v.y)&&g(v.prev,v,v.next)>=0)return!1;v=v.nextZ}for(;_&&_.z>=d;){if(_!==e.prev&&_!==e.next&&p(o.x,o.y,a.x,a.y,r.x,r.y,_.x,_.y)&&g(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;v&&v.z<=f;){if(v!==e.prev&&v!==e.next&&p(o.x,o.y,a.x,a.y,r.x,r.y,v.x,v.y)&&g(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function r(e,t,i){var o=e;do{var a=o.prev,r=o.next.next;!x(a,r)&&y(a,o,o.next,r)&&T(a,r)&&T(r,a)&&(t.push(a.i/i),t.push(o.i/i),t.push(r.i/i),I(o),I(o.next),o=e=r),o=o.next}while(o!==e);return n(o)}function s(e,t,o,a,r,s){var l=e;do{for(var c=l.next.next;c!==l.prev;){if(l.i!==c.i&&h(l,c)){var u=O(l,c);return l=n(l,l.next),u=n(u,u.next),i(l,t,o,a,r,s),void i(u,t,o,a,r,s)}c=c.next}l=l.next}while(l!==e)}function l(e,i,o,a){var r,s,l,u=[];for(r=0,s=i.length;r<s;r++)(l=t(e,i[r]*a,r<s-1?i[r+1]*a:e.length,a,!1))===l.next&&(l.steiner=!0),u.push(v(l));for(u.sort(c),r=0;r<u.length;r++)o=n(o=d(u[r],o),o.next);return o}function c(e,t){return e.x-t.x}function u(e){if(e.next.prev===e)return e;let t=e;for(;;){const n=t.next;if(n.prev===t||n===t||n===e)break;t=n}return t}function d(e,t){var i=function(e,t){var n,i=t,o=e.x,a=e.y,r=-1/0;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var s=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(s<=o&&s>r){if(r=s,s===o){if(a===i.y)return i;if(a===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!n)return null;if(o===r)return n;var l,c=n,u=n.x,d=n.y,_=1/0;i=n;do{o>=i.x&&i.x>=u&&o!==i.x&&p(a<d?o:r,a,u,d,a<d?r:o,a,i.x,i.y)&&(l=Math.abs(a-i.y)/(o-i.x),T(i,e)&&(l<_||l===_&&(i.x>n.x||i.x===n.x&&f(n,i)))&&(n=i,_=l)),i=i.next}while(i!==c);return n}(e,t);if(!i)return t;var o=O(i,e),a=n(i,i.next);let r=u(o);return n(r,r.next),a=u(a),u(t===i?a:t)}function f(e,t){return g(e.prev,e,t.prev)<0&&g(t.next,e,e.next)<0}function _(e,t,n,i){var o=e;do{null===o.z&&(o.z=m(o.x,o.y,t,n,i)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,i,o,a,r,s,l,c=1;do{for(n=e,e=null,a=null,r=0;n;){for(r++,i=n,s=0,t=0;t<c&&(s++,i=i.nextZ);t++);for(l=c;s>0||l>0&&i;)0!==s&&(0===l||!i||n.z<=i.z)?(o=n,n=n.nextZ,s--):(o=i,i=i.nextZ,l--),a?a.nextZ=o:e=o,o.prevZ=a,a=o;n=i}a.nextZ=null,c*=2}while(r>1)}(o)}function m(e,t,n,i,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*o)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*o)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function v(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function p(e,t,n,i,o,a,r,s){return(o-r)*(t-s)-(e-r)*(a-s)>=0&&(e-r)*(i-s)-(n-r)*(t-s)>=0&&(n-r)*(a-s)-(o-r)*(i-s)>=0}function h(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&y(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(T(e,t)&&T(t,e)&&function(e,t){var n=e,i=!1,o=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&o<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(g(e.prev,e,t.prev)||g(e,t.prev,t))||x(e,t)&&g(e.prev,e,e.next)>0&&g(t.prev,t,t.next)>0)}function g(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function x(e,t){return e.x===t.x&&e.y===t.y}function y(e,t,n,i){var o=S(g(e,t,n)),a=S(g(e,t,i)),r=S(g(n,i,e)),s=S(g(n,i,t));return o!==a&&r!==s||!(0!==o||!b(e,n,t))||!(0!==a||!b(e,i,t))||!(0!==r||!b(n,e,i))||!(0!==s||!b(n,t,i))}function b(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function T(e,t){return g(e.prev,e,e.next)<0?g(e,t,e.next)>=0&&g(e,e.prev,t)>=0:g(e,t,e.prev)<0||g(e,e.next,t)<0}function O(e,t){var n=new C(e.i,e.x,e.y),i=new C(t.i,t.x,t.y),o=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function E(e,t,n,i){var o=new C(e,t,n);return i?(o.next=i.next,o.prev=i,i.next.prev=o,i.next=o):(o.prev=o,o.next=o),o}function I(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function C(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function A(e,t,n,i){for(var o=0,a=t,r=n-i;a<n;a+=i)o+=(e[r]-e[a])*(e[a+1]+e[r+1]),r=a;return o}return e.deviation=function(e,t,n,i){var o=t&&t.length,a=o?t[0]*n:e.length,r=Math.abs(A(e,0,a,n));if(o)for(var s=0,l=t.length;s<l;s++){var c=t[s]*n,u=s<l-1?t[s+1]*n:e.length;r-=Math.abs(A(e,c,u,n))}var d=0;for(s=0;s<i.length;s+=3){var f=i[s]*n,_=i[s+1]*n,m=i[s+2]*n;d+=Math.abs((e[f]-e[m])*(e[_+1]-e[f+1])-(e[f]-e[_])*(e[m+1]-e[f+1]))}return 0===r&&0===d?0:Math.abs((d-r)/r)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},i=0,o=0;o<e.length;o++){for(var a=0;a<e[o].length;a++)for(var r=0;r<t;r++)n.vertices.push(e[o][a][r]);o>0&&(i+=e[o-1].length,n.holes.push(i))}return n},e},void 0!==(a=o())&&(i.exports=a);const s=r.exports},225:function(e,t,n){"use strict";n.d(t,"a",(function(){return $}));var i=n(249),o=n(134),a=n(253),r=n(191),s=n(152),l=n(140),c=n(214);class u extends s.a{constructor(){super(...arguments),this._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState(e,t){let{context:n}=e;n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA,l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(l.h.EQUAL,t.stencilRef,255)}draw(e,t){var n;if(!Object(a.b)(t)||t.suspended)return;const{timeline:i,context:o,painter:r,requestRender:s}=e;i.begin(this.name);const l=!(null!==(n=o.capabilities.textureFloat)&&void 0!==n&&n.textureFloatLinear);t.updateTexture(e);const c=this._getShaderVariations(t,l),u=r.materialManager.getProgram(this._desc[t.symbolizerParameters.type],c);this._drawWithProgram(o,u,t,s),i.end(this.name)}_drawWithProgram(e,t,n,i){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[0,0],l=arguments.length>6&&void 0!==arguments[6]&&arguments[6];if(this._quad||(this._quad=new r.a(e,[0,0,1,0,0,1,1,1])),Object(o.k)(i)&&!t.isCompiled)return void i();const{symbolizerParameters:u,transformGrid:d,width:f,height:_,opacity:m}=n,v=u.type;e.useProgram(t);const p=this._getShaderVariations(n),h=this._getUniformInfos(v,e,t,p),{names:g,textures:x}=n.getTextures();Object(c.j)(e,t,g,x);const y=Object(c.d)(a,s),b=Object(c.f)(d,[f,_],[n.source.width,n.source.height],m,l);if(Object(c.k)(t,h,{u_coordScale:n.coordScale,u_dvsMat3:n.transforms.dvs,...y,...b}),u.colormap){const{colormap:e,colormapOffset:n}=u,i=Object(c.e)(e,n);Object(c.k)(t,h,i)}if("stretch"===u.type){const e=Object(c.h)(u);Object(c.k)(t,h,e)}else if("hillshade"===u.type){const e=Object(c.g)(u);Object(c.k)(t,h,e)}this._quad.draw()}_getUniformInfos(e,t,n,i){const o=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(o))return this._rendererUniformInfos.get(o);const a=Object(c.i)(t,n);return this._rendererUniformInfos.set(o,a),a}_getShaderVariations(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=[],{interpolation:i}=e,{type:o,colormap:a}=e.symbolizerParameters;return"cubic"===i?n.push("bicubic"):"bilinear"===i&&"stretch"===o&&null!=a?(n.push("bilinear"),n.push("nnedge")):t&&"bilinear"===i&&n.push("bilinear"),e.isRendereredSource?n.push("noop"):a&&n.push("applyColormap"),e.transformGrid&&(n.push("applyProjection"),1===e.transformGrid.spacing[0]&&n.push("lookupProjection")),n}}var d=n(250),f=n(144);const _={nearest:{defines:[],samplingMode:l.z.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:l.z.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:l.z.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:l.z.LINEAR_MIPMAP_LINEAR,mips:!0}};class m extends s.a{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_pos",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState(e,t){let{context:n}=e;n.setBlendingEnabled(!0),"additive"===t.blendFunction?n.setBlendFunctionSeparate(l.b.ONE,l.b.ONE,l.b.ONE,l.b.ONE):n.setBlendFunctionSeparate(l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA,l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(l.h.EQUAL,t.stencilRef,255)}draw(e,t){const{context:n,renderingOptions:i,painter:a,requestRender:s}=e;if(!t.source)return;const l=((e,t,n)=>{if("dynamic"===n.samplingMode){const{state:n}=e,i=t.resolution/t.pixelRatio/n.resolution,o=Math.round(e.pixelRatio)!==e.pixelRatio,a=i>1.05||i<.95;return n.rotation||a||o||t.isSourceScaled||t.rotation?_.bilinear:_.nearest}return _[n.samplingMode]})(e,t,i),c=a.materialManager.getProgram(this._desc,l.defines);if(Object(o.k)(s)&&!c.isCompiled)return void s();e.timeline.begin(this.name),this._quad||(this._quad=new r.a(n,[0,0,1,0,0,1,1,1]));const{coordScale:u,computedOpacity:d,transforms:m}=t;t.setSamplingProfile(l),t.bind(e.context,f.L),n.useProgram(c),c.setUniformMatrix3fv("u_dvsMat3",m.dvs),c.setUniform1i("u_texture",f.L),c.setUniform2fv("u_coordScale",u),c.setUniform1f("u_opacity",d),this._quad.draw(),e.timeline.end(this.name)}}var v=n(187),p=n(151),h=n(195),g=n(190);class x extends s.a{constructor(){super(...arguments),this._color=Object(v.a)(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState(e){let{context:t}=e;t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(l.w.KEEP,l.w.KEEP,l.w.REPLACE),t.setStencilWriteMask(255),t.setStencilFunction(l.h.ALWAYS,0,255)}draw(e,t){const{context:n,state:i,requestRender:a}=e,r=Object(p.g)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT}]}),s=t.getVAO(n,i,r.attributes,r.bufferLayouts);Object(o.j)(s.indexBuffer)||(this._program||(this._program=Object(g.a)(n,h.a)),!Object(o.k)(a)||this._program.isCompiled?(n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",i.displayMat3),n.bindVAO(s),n.drawElements(l.r.TRIANGLES,s.indexBuffer.size,l.k.UNSIGNED_INT,0),n.bindVAO()):a())}}class y extends s.a{constructor(){super(...arguments),this._desc={vsPath:"overlay/overlay",fsPath:"overlay/overlay",attributes:new Map([["a_pos",0],["a_uv",1]])}}dispose(){}prepareState(e){let{context:t}=e;t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setBlendFunctionSeparate(l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA,l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(l.h.GREATER,255,255)}draw(e,t){const{context:n,painter:i,requestRender:a}=e;if(!t.isReady)return;const{computedOpacity:r,dvsMat3:s,isWrapAround:c,texture:u}=t;e.timeline.begin(this.name);const d=i.materialManager.getProgram(this._desc);if(Object(o.k)(a)&&!d.isCompiled)return void a();const _=Object(p.g)("overlay",{geometry:[{location:0,name:"a_pos",count:2,type:l.k.FLOAT}],tex:[{location:1,name:"a_uv",count:2,type:l.k.UNSIGNED_SHORT}]}),m=t.getVAO(n,_.bufferLayouts,_.attributes);if(!m)return;n.bindVAO(m),n.useProgram(d),n.bindTexture(u,f.L),d.setUniformMatrix3fv("u_dvsMat3",s),d.setUniform1i("u_texture",f.L),d.setUniform1f("u_opacity",r);const v=c?10:4;n.drawArrays(l.r.TRIANGLE_STRIP,0,v),n.bindVAO(),e.timeline.end(this.name)}}var b=n(229),S=n(142),T=n(146);class O extends s.a{constructor(){super(...arguments),this._computeDesc=new Map}prepareState(e,t,n){let{context:i}=e;n&&n.includes("hittest")?i.setBlendFunctionSeparate(l.b.ONE,l.b.ONE,l.b.ONE,l.b.ONE):i.setBlendFunctionSeparate(l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA,l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA),i.setBlendingEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!0),i.setStencilFunction(l.h.EQUAL,t.stencilRef,255)}draw(e,t,n){const i=this.getGeometryType();t.commit(e);const a=t.getGeometry(i);Object(o.j)(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),a.forEachCommand((i=>{const o=T.e.load(i.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(e,t,i,n)})))}_setSharedUniforms(e,t,n){const{displayLevel:i,pixelRatio:a,state:r,passOptions:s}=t;Object(o.k)(s)&&"hittest"===s.type&&(e.setUniform2fv("u_hittestPos",s.position),e.setUniform1f("u_hittestDist",s.distance)),e.setUniform1f("u_pixelRatio",a),e.setUniformMatrix3fv("u_tileMat3",n.transforms.tileMat3),e.setUniformMatrix3fv("u_viewMat3",r.viewMat3),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",r.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(i*f.z)),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",f.F),e.setUniform1i("u_attributeData1",f.G),e.setUniform1i("u_attributeData2",f.H),e.setUniform1i("u_attributeData3",f.I),e.setUniform1i("u_attributeData4",f.J),e.setUniform1i("u_attributeData5",f.K)}_setSizeVVUniforms(e,t,n,i){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",n.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",n.vvSizeScaleStopsValue),e.vvSizeFieldStops){const e=n.getSizeVVFieldStops(i.key.level);t.setUniform1fv("u_vvSizeFieldStopsValues",e.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",n.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(e,t,n){e.vvColor&&(t.setUniform1fv("u_vvColorValues",n.vvColorValues),t.setUniform4fv("u_vvColors",n.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",n.vvOpacityValues),t.setUniform1fv("u_vvOpacities",n.vvOpacities))}_setRotationVVUniforms(e,t,n){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===n.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["a_pos"];const i=t.bufferLayouts.geometry,o=n.map((e=>i.findIndex((t=>t.name===e)))),a="".concat(e,"-").concat(o.join("-"));let r=this._computeDesc.get(a);if(!r){const e=t.strides,n=t.strides.geometry,s=new Map(t.attributes),l=i.map((e=>({...e}))),c=Math.max(...t.attributes.values()),u={geometry:l};let d=0;for(const t of o){const e=i[t];u.geometry.push({count:e.count,name:e.name+"1",divisor:e.divisor,normalized:e.normalized,offset:n+e.offset,stride:n,type:e.type}),u.geometry.push({count:e.count,name:e.name+"2",divisor:e.divisor,normalized:e.normalized,offset:2*n+e.offset,stride:n,type:e.type}),s.set(e.name+"1",c+ ++d),s.set(e.name+"2",c+ ++d)}r={bufferLayouts:u,attributes:s,strides:e},this._computeDesc.set(a,r)}return r}}var E=n(168);class I extends O{dispose(){}getGeometryType(){return S.d.FILL}supportsSymbology(e){return e!==S.e.DOT_DENSITY}drawGeometry(e,t,n,i){const{context:a,painter:r,rendererInfo:s,requiredLevel:c,passOptions:u,requestRender:d}=e,f=T.a.load(n.materialKey),_=Object(E.b)(f.data),m=Object(o.k)(u)&&"hittest"===u.type,v=r.materialManager,{shader:h,vertexLayout:g,hittestAttributes:x}=Object(o.r)(_.programSpec,function(e){const t={geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT},{location:1,name:"a_id",count:3,type:l.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:l.k.UNSIGNED_BYTE},{location:3,name:"a_color",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_aux1",count:4,type:l.k.UNSIGNED_SHORT},{location:5,name:"a_aux2",count:4,type:l.k.SHORT},{location:6,name:"a_aux3",count:4,type:l.k.UNSIGNED_BYTE},{location:7,name:"a_zoomRange",count:2,type:l.k.UNSIGNED_SHORT}]};switch(e.symbologyType){case S.e.SIMPLE:case S.e.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:"materials/fill",vertexLayout:t}}(f));let y=l.r.TRIANGLES,b=Object(p.g)(f.data,g);m&&(b=this._getTriangleDesc(n.materialKey,b,x),y=l.r.POINTS);const{attributes:O,bufferLayouts:I}=b,C=v.getMaterialProgram(e,f,h,O,i);if(Object(o.k)(d)&&!m&&!C.isCompiled)return void d();if(a.useProgram(C),this._setSharedUniforms(C,e,t),C.setUniform2f("u_tileOffset",512*t.key.col,512*t.key.row),f.textureBinding){r.textureManager.bindTextures(a,C,f);const e=1/2**(c-t.key.level);C.setUniform1f("u_zoomFactor",e)}const A=1/e.pixelRatio;C.setUniform1f("u_blur",A),C.setUniform1f("u_antialiasing",A),this._setSizeVVUniforms(f,C,s,t),this._setColorAndOpacityVVUniforms(f,C,s);const R=n.target.getVAO(a,I,O,m);let P=n.indexCount,L=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m&&(P/=3,L/=3),a.bindVAO(R),this._drawFills(e,t,C,y,P,L)}_drawFills(e,t,n,i,o,a){e.context.drawElements(i,o,l.k.UNSIGNED_INT,a)}}var C=n(159),A=n(193),R=n(330),P=n(172),L=n(160);var M=n(143);const D={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:l.k.SHORT},{location:2,name:"a_texCoords",count:2,type:l.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:l.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:l.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:l.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:l.k.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]};class w extends O{dispose(){}getGeometryType(){return S.d.MARKER}supportsSymbology(e){return e!==S.e.HEATMAP&&e!==S.e.PIE_CHART}drawGeometry(e,t,n,i){const{context:a,painter:r,rendererInfo:s,state:c,passOptions:u,requestRender:d}=e,f=T.d.load(n.materialKey),_=Object(E.b)(f.data),m=Object(o.k)(u)&&"hittest"===u.type,{shader:v,vertexLayout:h,hittestAttributes:g}=Object(o.r)(_.programSpec,D);let x=l.r.TRIANGLES,y=Object(p.g)(f.data,h);m&&(y=this._getTriangleDesc(n.materialKey,y,g),x=l.r.POINTS);const{attributes:b,bufferLayouts:S}=y,O=r.materialManager.getMaterialProgram(e,f,v,b,i);if(Object(o.k)(d)&&!m&&!O.isCompiled)return void d();a.useProgram(O),f.textureBinding&&r.textureManager.bindTextures(a,O,f,!0),this._setSharedUniforms(O,e,t);const I=f.vvRotation?c.displayViewMat3:c.displayMat3;O.setUniformMatrix3fv("u_displayMat3",I),this._setSizeVVUniforms(f,O,s,t),this._setColorAndOpacityVVUniforms(f,O,s),this._setRotationVVUniforms(f,O,s);const C=n.target.getVAO(a,S,b,m);let A=n.indexCount,R=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m&&(A/=3,R/=3),a.bindVAO(C),this._drawMarkers(e,t,O,x,A,R,m),a.bindVAO(null)}_drawMarkers(e,t,n,i,o,a,r){e.context.drawElements(i,o,l.k.UNSIGNED_INT,a)}}var z=n(198);const N=M.a.getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap"),V={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])};var F=n(226);var U=n(222),B=n(175),j=n(157),k=n(155);class G extends s.a{constructor(){super(...arguments),this._color=Object(v.a)(1,0,0,1),this._patternMatrix=Object(j.b)(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,t){const{context:n,painter:i,styleLayerUID:a,requestRender:r}=e;this._loadWGLResources(e);const s=e.displayLevel,c=e.styleLayer,u=c.backgroundMaterial,d=i.vectorTilesMaterialManager,_=c.getPaintValue("background-color",s),m=c.getPaintValue("background-opacity",s),v=c.getPaintValue("background-pattern",s),p=void 0!==v,h=_[3]*m,g=1|window.devicePixelRatio,x=e.spriteMosaic;let y,b;const T=g>f.W?2:1,O=e.drawPhase===S.c.HITTEST,E=this._programOptions;E.id=O,E.pattern=p;const I=d.getMaterialProgram(n,u,E);if(!Object(o.k)(r)||O||I.isCompiled){if(n.bindVAO(this._vao),n.useProgram(I),p){const e=x.getMosaicItemPosition(v,!0);if(Object(o.k)(e)){const{tl:t,br:i,page:a}=e;y=i[0]-t[0],b=i[1]-t[1];const r=x.getPageSize(a);Object(o.k)(r)&&(x.bind(n,l.z.LINEAR,a,f.Y),I.setUniform4f("u_tlbr",t[0],t[1],i[0],i[1]),I.setUniform2fv("u_mosaicSize",r),I.setUniform1i("u_texture",f.Y))}I.setUniform1f("u_opacity",m)}else this._color[0]=h*_[0],this._color[1]=h*_[1],this._color[2]=h*_[2],this._color[3]=h,I.setUniform4fv("u_color",this._color);if(I.setUniform1f("u_depth",c.z||0),O){const e=Object(k.c)(a+1);I.setUniform4fv("u_id",e)}for(const e of t){if(I.setUniform1f("u_coord_range",e.rangeX),I.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),p){const t=Math.max(2**(Math.round(s)-e.key.level),1),n=T*e.width*t,i=n/Object(B.k)(y),o=n/Object(B.k)(b);this._patternMatrix[0]=i,this._patternMatrix[4]=o,I.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(l.h.EQUAL,e.stencilRef,255),n.drawArrays(l.r.TRIANGLE_STRIP,0,4)}}else r()}_loadWGLResources(e){if(this._vao)return;const{context:t,styleLayer:n}=e,i=n.backgroundMaterial,o=new Int8Array([0,0,1,0,0,1,1,1]),a=C.a.createVertex(t,l.D.STATIC_DRAW,o),r=new L.a(t,i.getAttributeLocations(),i.getLayoutInfo(),{geometry:a});this._vao=r}}var H=n(178);class Y extends s.a{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,requiredLevel:a,state:r,drawPhase:s,painter:c,spriteMosaic:u,styleLayerUID:d,requestRender:f}=e;if(!t.some((e=>{var t,n;return null!==(t=null===(n=e.layerData.get(d))||void 0===n?void 0:n.circleIndexCount)&&void 0!==t&&t})))return;const _=e.styleLayer,m=_.circleMaterial,v=c.vectorTilesMaterialManager,p=_.getPaintValue("circle-translate",i),h=_.getPaintValue("circle-translate-anchor",i),g=s===S.c.HITTEST,x=this._programOptions;x.id=g;const y=v.getMaterialProgram(n,m,x);if(!g&&Object(o.k)(f)&&!y.isCompiled)return void f();n.useProgram(y),y.setUniformMatrix3fv("u_displayMat3",h===H.i.VIEWPORT?r.displayMat3:r.displayViewMat3),y.setUniform2fv("u_circleTranslation",p),y.setUniform1f("u_depth",_.z),y.setUniform1f("u_antialiasingWidth",1.2);let b=-1;if(g){const e=Object(k.c)(d+1);y.setUniform4fv("u_id",e)}for(const S of t){if(!S.layerData.has(d))continue;S.key.level!==b&&(b=S.key.level,m.setDataUniforms(y,i,_,b,u));const e=S.layerData.get(d);if(!e.circleIndexCount)continue;e.prepareForRendering(n);const t=e.circleVertexArrayObject;Object(o.j)(t)||(n.bindVAO(t),y.setUniformMatrix3fv("u_dvsMat3",S.transforms.dvs),a!==S.key.level?n.setStencilFunction(l.h.EQUAL,S.stencilRef,255):n.setStencilFunction(l.h.GREATER,255,255),n.drawElements(l.r.TRIANGLES,e.circleIndexCount,l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.circleIndexStart),S.triangleCount+=e.circleIndexCount/3)}}}const W=1/65536;class q extends s.a{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(e,t){const{displayLevel:n,drawPhase:i,renderPass:o,spriteMosaic:a,styleLayerUID:r}=e;let s=!1;for(const y of t)if(y.layerData.has(r)){const e=y.layerData.get(r);if(e.fillIndexCount>0||e.outlineIndexCount>0){s=!0;break}}if(!s)return;const l=e.styleLayer,c=l.getPaintProperty("fill-pattern"),u=void 0!==c,d=u&&c.isDataDriven;let f;if(u&&!d){const e=c.getValue(n);f=a.getMosaicItemPosition(e,!0)}const _=!u&&l.getPaintValue("fill-antialias",n);let m,v=!0,p=1;if(!u){const e=l.getPaintProperty("fill-color"),t=l.getPaintProperty("fill-opacity");if((null===e||void 0===e||!e.isDataDriven)&&(null===t||void 0===t||!t.isDataDriven)){const e=l.getPaintValue("fill-color",n);p=l.getPaintValue("fill-opacity",n)*e[3],p>=1&&(v=!1)}}if(v&&"opaque"===o)return;i===S.c.HITTEST&&(m=Object(k.c)(r+1));const h=l.getPaintValue("fill-translate",n),g=l.getPaintValue("fill-translate-anchor",n);(v||"translucent"!==o)&&this._drawFill(e,r,l,t,h,g,u,f,d,m);const x=!l.hasDataDrivenOutlineColor&&l.outlineUsesFillColor&&p<1;_&&"opaque"!==o&&!x&&this._drawOutline(e,r,l,t,h,g,m)}_drawFill(e,t,n,i,a,r,s,c,u,d){if(s&&!u&&Object(o.j)(c))return;const{context:_,displayLevel:m,state:v,drawPhase:p,painter:h,pixelRatio:g,spriteMosaic:x,requestRender:y}=e,b=n.fillMaterial,T=h.vectorTilesMaterialManager,O=g>f.W?2:1,E=p===S.c.HITTEST,I=this._fillProgramOptions;I.id=E,I.pattern=s;const C=T.getMaterialProgram(_,b,I);if(Object(o.k)(y)&&!E&&!C.isCompiled)return void y();if(_.useProgram(C),Object(o.k)(c)){const{page:e}=c,t=x.getPageSize(e);Object(o.k)(t)&&(x.bind(_,l.z.LINEAR,e,f.Y),C.setUniform2fv("u_mosaicSize",t),C.setUniform1i("u_texture",f.Y))}C.setUniformMatrix3fv("u_displayMat3",r===H.i.VIEWPORT?v.displayMat3:v.displayViewMat3),C.setUniform2fv("u_fillTranslation",a),C.setUniform1f("u_depth",n.z+W),E&&C.setUniform4fv("u_id",d);let A=-1;for(const S of i){if(!S.layerData.has(t))continue;S.key.level!==A&&(A=S.key.level,b.setDataUniforms(C,m,n,A,x));const e=S.layerData.get(t);if(!e.fillIndexCount)continue;e.prepareForRendering(_);const i=e.fillVertexArrayObject;if(!Object(o.j)(i)){if(_.bindVAO(i),C.setUniformMatrix3fv("u_dvsMat3",S.transforms.dvs),_.setStencilFunction(l.h.EQUAL,S.stencilRef,255),s){const e=Math.max(2**(Math.round(m)-S.key.level),1),t=S.rangeX/(O*S.width*e);C.setUniform1f("u_patternFactor",t)}if(u){const t=e.patternMap;if(!t)continue;for(const[e,n]of t){const t=x.getPageSize(e);Object(o.k)(t)&&(x.bind(_,l.z.LINEAR,e,f.Y),C.setUniform2fv("u_mosaicSize",t),C.setUniform1i("u_texture",f.Y),_.drawElements(l.r.TRIANGLES,n[1],l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else _.drawElements(l.r.TRIANGLES,e.fillIndexCount,l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.fillIndexStart);S.triangleCount+=e.fillIndexCount/3}}}_drawOutline(e,t,n,i,a,r,s){const{context:c,displayLevel:u,state:d,drawPhase:f,painter:_,pixelRatio:m,spriteMosaic:v,requestRender:p}=e,h=n.outlineMaterial,g=_.vectorTilesMaterialManager,x=.75/m,y=f===S.c.HITTEST,b=this._outlineProgramOptions;b.id=y;const T=g.getMaterialProgram(c,h,b);if(Object(o.k)(p)&&!y&&!T.isCompiled)return void p();c.useProgram(T),T.setUniformMatrix3fv("u_displayMat3",r===H.i.VIEWPORT?d.displayMat3:d.displayViewMat3),T.setUniform2fv("u_fillTranslation",a),T.setUniform1f("u_depth",n.z+W),T.setUniform1f("u_outline_width",x),y&&T.setUniform4fv("u_id",s);let O=-1;for(const S of i){if(!S.layerData.has(t))continue;S.key.level!==O&&(O=S.key.level,h.setDataUniforms(T,u,n,O,v));const e=S.layerData.get(t);if(e.prepareForRendering(c),!e.outlineIndexCount)continue;const i=e.outlineVertexArrayObject;Object(o.j)(i)||(c.bindVAO(i),T.setUniformMatrix3fv("u_dvsMat3",S.transforms.dvs),c.setStencilFunction(l.h.EQUAL,S.stencilRef,255),c.drawElements(l.r.TRIANGLES,e.outlineIndexCount,l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),S.triangleCount+=e.outlineIndexCount/3)}}}class Z extends s.a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,state:a,drawPhase:r,painter:s,pixelRatio:c,spriteMosaic:u,styleLayerUID:d,requestRender:_}=e;if(!t.some((e=>{var t,n;return null!==(t=null===(n=e.layerData.get(d))||void 0===n?void 0:n.lineIndexCount)&&void 0!==t&&t})))return;const m=e.styleLayer,v=m.lineMaterial,p=s.vectorTilesMaterialManager,h=m.getPaintValue("line-translate",i),g=m.getPaintValue("line-translate-anchor",i),x=m.getPaintProperty("line-pattern"),y=void 0!==x,b=y&&x.isDataDriven;let T,O;if(y&&!b){const e=x.getValue(i);T=u.getMosaicItemPosition(e)}let E=!1;if(!y){const e=m.getPaintProperty("line-dasharray");if(O=void 0!==e,E=O&&e.isDataDriven,O&&!E){const t=e.getValue(i),n=m.getDashKey(t,m.getLayoutValue("line-cap",i));T=u.getMosaicItemPosition(n)}}const I=1/c,C=r===S.c.HITTEST,A=this._programOptions;A.id=C,A.pattern=y,A.sdf=O;const R=p.getMaterialProgram(n,v,A);if(Object(o.k)(_)&&!C&&!R.isCompiled)return void _();if(n.useProgram(R),R.setUniformMatrix3fv("u_displayViewMat3",a.displayViewMat3),R.setUniformMatrix3fv("u_displayMat3",g===H.i.VIEWPORT?a.displayMat3:a.displayViewMat3),R.setUniform2fv("u_lineTranslation",h),R.setUniform1f("u_depth",m.z),R.setUniform1f("u_antialiasing",I),C){const e=Object(k.c)(d+1);R.setUniform4fv("u_id",e)}if(T&&Object(o.k)(T)){const{page:e}=T,t=u.getPageSize(e);Object(o.k)(t)&&(u.bind(n,l.z.LINEAR,e,f.Y),R.setUniform2fv("u_mosaicSize",t),R.setUniform1i("u_texture",f.Y))}let P=-1;for(const S of t){if(!S.layerData.has(d))continue;S.key.level!==P&&(P=S.key.level,v.setDataUniforms(R,i,m,P,u));const e=2**(i-P)/c;R.setUniform1f("u_zoomFactor",e);const t=S.layerData.get(d);if(!t.lineIndexCount)continue;t.prepareForRendering(n);const a=t.lineVertexArrayObject;if(!Object(o.j)(a)){if(n.bindVAO(a),R.setUniformMatrix3fv("u_dvsMat3",S.transforms.dvs),n.setStencilFunction(l.h.EQUAL,S.stencilRef,255),b||E){const e=t.patternMap;if(!e)continue;for(const[t,i]of e){const e=u.getPageSize(t);Object(o.k)(e)&&(u.bind(n,l.z.LINEAR,t,f.Y),R.setUniform2fv("u_mosaicSize",e),R.setUniform1i("u_texture",f.Y),n.drawElements(l.r.TRIANGLES,i[1],l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]))}}else n.drawElements(l.r.TRIANGLES,t.lineIndexCount,l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.lineIndexStart);S.triangleCount+=t.lineIndexCount/3}}}}var X=n(171),K=n(236),Q=n(200);class J extends s.a{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Object(X.a)()}dispose(){}drawMany(e,t){const{drawPhase:n,styleLayerUID:i}=e,o=e.styleLayer;let a;n===S.c.HITTEST&&(a=Object(k.c)(i+1)),this._drawIcons(e,o,t,a),this._drawText(e,o,t,a)}_drawIcons(e,t,n,i){const{context:a,displayLevel:r,drawPhase:s,painter:l,spriteMosaic:c,state:u,styleLayerUID:d,requestRender:_}=e,m=t.iconMaterial,v=l.vectorTilesMaterialManager;let p,h=!1;for(const o of n)if(o.layerData.has(d)&&(p=o.layerData.get(d),p.iconPerPageElementsMap.size>0)){h=!0;break}if(!h)return;const g=t.getPaintValue("icon-translate",r),x=t.getPaintValue("icon-translate-anchor",r);let y=t.getLayoutValue("icon-rotation-alignment",r);y===H.a.AUTO&&(y=t.getLayoutValue("symbol-placement",r)===H.e.POINT?H.a.VIEWPORT:H.a.MAP);const b=y===H.a.MAP,T=t.getLayoutValue("icon-keep-upright",r)&&b,O=p.isIconSDF,E=s===S.c.HITTEST,I=this._iconProgramOptions;I.id=E,I.sdf=O;const C=v.getMaterialProgram(a,m,I);if(Object(o.k)(_)&&!E&&!C.isCompiled)return void _();a.useProgram(C),C.setUniformMatrix3fv("u_displayViewMat3",y===H.a.MAP?u.displayViewMat3:u.displayMat3),C.setUniformMatrix3fv("u_displayMat3",x===H.i.VIEWPORT?u.displayMat3:u.displayViewMat3),C.setUniform2fv("u_iconTranslation",g),C.setUniform1f("u_depth",t.z),C.setUniform1f("u_mapRotation",Object(Q.b)(u.rotation)),C.setUniform1f("u_keepUpright",T?1:0),C.setUniform1f("u_level",10*r),C.setUniform1i("u_texture",f.Y),C.setUniform1f("u_fadeDuration",K.d/1e3),E&&C.setUniform4fv("u_id",i);let A=-1;for(const f of n){if(!f.layerData.has(d))continue;if(f.key.level!==A&&(A=f.key.level,m.setDataUniforms(C,r,t,A,c)),p=f.layerData.get(d),0===p.iconPerPageElementsMap.size)continue;p.prepareForRendering(a),p.updateOpacityInfo();const n=p.iconVertexArrayObject;if(!Object(o.j)(n)){a.bindVAO(n),C.setUniformMatrix3fv("u_dvsMat3",f.transforms.dvs),C.setUniform1f("u_time",(performance.now()-p.lastOpacityUpdate)/1e3);for(const[t,n]of p.iconPerPageElementsMap)this._renderIconRange(e,C,n,t,f)}}}_renderIconRange(e,t,n,i,o){const{context:a,spriteMosaic:r}=e;this._spritesTextureSize[0]=r.getWidth(i)/4,this._spritesTextureSize[1]=r.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),r.bind(a,l.z.LINEAR,i,f.Y),a.setStencilTestEnabled(!0),a.setStencilFunction(l.h.GREATER,255,255),a.setStencilWriteMask(0),a.drawElements(l.r.TRIANGLES,n[1],l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]),o.triangleCount+=n[1]/3}_drawText(e,t,n,i){const{context:a,displayLevel:r,drawPhase:s,glyphMosaic:c,painter:u,pixelRatio:d,spriteMosaic:_,state:m,styleLayerUID:v,requestRender:p}=e,h=t.textMaterial,g=u.vectorTilesMaterialManager;let x,y=!1;for(const o of n)if(o.layerData.has(v)&&(x=o.layerData.get(v),x.glyphPerPageElementsMap.size>0)){y=!0;break}if(!y)return;const b=t.getPaintProperty("text-opacity");if(b&&!b.isDataDriven&&0===b.getValue(r))return;const T=t.getPaintProperty("text-color"),O=!T||T.isDataDriven||T.getValue(r)[3]>0,E=t.getPaintProperty("text-halo-width"),I=t.getPaintProperty("text-halo-color"),C=(!E||E.isDataDriven||E.getValue(r)>0)&&(!I||I.isDataDriven||I.getValue(r)[3]>0);if(!O&&!C)return;let A=t.getLayoutValue("text-rotation-alignment",r);A===H.a.AUTO&&(A=t.getLayoutValue("symbol-placement",r)===H.e.POINT?H.a.VIEWPORT:H.a.MAP);const R=A===H.a.MAP,P=t.getLayoutValue("text-keep-upright",r)&&R,L=s===S.c.HITTEST,M=.8*3/d;this._glyphTextureSize||(this._glyphTextureSize=Object(X.b)(c.width/4,c.height/4));const D=t.getPaintValue("text-translate",r),w=t.getPaintValue("text-translate-anchor",r),z=this._sdfProgramOptions;z.id=L;const N=g.getMaterialProgram(a,h,z);if(Object(o.k)(p)&&!L&&!N.isCompiled)return void p();a.useProgram(N),N.setUniformMatrix3fv("u_displayViewMat3",A===H.a.MAP?m.displayViewMat3:m.displayMat3),N.setUniformMatrix3fv("u_displayMat3",w===H.i.VIEWPORT?m.displayMat3:m.displayViewMat3),N.setUniform2fv("u_textTranslation",D),N.setUniform1f("u_depth",t.z+152587890625e-16),N.setUniform2fv("u_mosaicSize",this._glyphTextureSize),N.setUniform1f("u_mapRotation",Object(Q.b)(m.rotation)),N.setUniform1f("u_keepUpright",P?1:0),N.setUniform1f("u_level",10*r),N.setUniform1i("u_texture",f.X),N.setUniform1f("u_antialiasingWidth",M),N.setUniform1f("u_fadeDuration",K.d/1e3),L&&N.setUniform4fv("u_id",i);let V=-1;for(const f of n){if(!f.layerData.has(v))continue;if(f.key.level!==V&&(V=f.key.level,h.setDataUniforms(N,r,t,V,_)),x=f.layerData.get(v),0===x.glyphPerPageElementsMap.size)continue;x.prepareForRendering(a),x.updateOpacityInfo();const e=x.textVertexArrayObject;if(Object(o.j)(e))continue;a.bindVAO(e),N.setUniformMatrix3fv("u_dvsMat3",f.transforms.dvs),a.setStencilTestEnabled(!0),a.setStencilFunction(l.h.GREATER,255,255),a.setStencilWriteMask(0);const n=(performance.now()-x.lastOpacityUpdate)/1e3;N.setUniform1f("u_time",n),x.glyphPerPageElementsMap.forEach(((e,t)=>{this._renderGlyphRange(a,e,t,c,N,C,O,f)}))}}_renderGlyphRange(e,t,n,i,o,a,r,s){i.bind(e,l.z.LINEAR,n,f.X),a&&(o.setUniform1f("u_halo",1),e.drawElements(l.r.TRIANGLES,t[1],l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3),r&&(o.setUniform1f("u_halo",0),e.drawElements(l.r.TRIANGLES,t[1],l.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3)}}const $={marker:w,line:class extends O{dispose(){}getGeometryType(){return S.d.LINE}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:a,painter:r,rendererInfo:s,displayLevel:c,passOptions:u,requestRender:d}=e,f=T.c.load(n.materialKey),_=Object(o.k)(u)&&"hittest"===u.type;let m=(h=f,Object(p.g)(h.data,{geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT},{location:1,name:"a_id",count:4,type:l.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:l.k.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:l.k.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:l.k.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:l.k.BYTE},{location:7,name:"a_aux",count:2,type:l.k.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:l.k.UNSIGNED_SHORT}]})),v=l.r.TRIANGLES;var h;_&&(m=this._getTriangleDesc(n.materialKey,m),v=l.r.POINTS);const{attributes:g,bufferLayouts:x}=m,y=r.materialManager.getMaterialProgram(e,f,"materials/line",g,i);if(Object(o.k)(d)&&!_&&!y.isCompiled)return void d();const b=1/e.pixelRatio;a.useProgram(y),this._setSharedUniforms(y,e,t),f.textureBinding&&r.textureManager.bindTextures(a,y,f);const S=2**(c-t.key.level);y.setUniform1f("u_zoomFactor",S),y.setUniform1f("u_blur",0+b),y.setUniform1f("u_antialiasing",b),this._setSizeVVUniforms(f,y,s,t),this._setColorAndOpacityVVUniforms(f,y,s),a.setFaceCullingEnabled(!1);const O=n.target.getVAO(a,x,g,_);let E=n.indexCount,I=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;_&&(E/=3,I/=3),a.bindVAO(O),a.drawElements(v,E,l.k.UNSIGNED_INT,I)}},fill:I,text:class extends O{dispose(){}getGeometryType(){return S.d.TEXT}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:a,painter:r,rendererInfo:s,state:c,passOptions:u,requestRender:d}=e,f=T.f.load(n.materialKey),_=Object(o.k)(u)&&"hittest"===u.type,{bufferLayouts:m,attributes:v}=(g=f,Object(p.g)(g.data,{geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT},{location:1,name:"a_id",count:4,type:l.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:l.k.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:l.k.BYTE},{location:6,name:"a_zoomRange",count:2,type:l.k.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:l.k.SHORT},{location:8,name:"a_texCoords",count:2,type:l.k.UNSIGNED_SHORT}]})),h=r.materialManager.getMaterialProgram(e,f,"materials/text",v,i);var g;if(Object(o.k)(d)&&!_&&!h.isCompiled)return void d();a.useProgram(h);let x=l.r.TRIANGLES;_&&(x=l.r.POINTS),this._setSharedUniforms(h,e,t),r.textureManager.bindTextures(a,h,f),h.setUniformMatrix3fv("u_displayMat3",c.displayMat3),h.setUniformMatrix3fv("u_displayViewMat3",c.displayViewMat3),this._setSizeVVUniforms(f,h,s,t),this._setColorAndOpacityVVUniforms(f,h,s),this._setRotationVVUniforms(f,h,s),h.setUniform1f("u_isHalo",1);const y=n.target.getVAO(a,m,v),b=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;a.bindVAO(y),a.drawElements(l.r.TRIANGLES,n.indexCount,l.k.UNSIGNED_INT,b),h.setUniform1f("u_isHalo",0),a.drawElements(x,n.indexCount,l.k.UNSIGNED_INT,b)}},label:class extends O{dispose(){}getGeometryType(){return S.d.LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:a,painter:r,state:s,rendererInfo:c,passOptions:u,requestRender:d}=e,f=T.b.load(n.materialKey),_=Object(o.k)(u)&&"hittest"===u.type,m=f.mapAligned?1:0;if(!m&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:v,attributes:h}=(x=f,Object(p.g)(x.data,{geometry:[{location:0,name:"a_pos",count:2,type:l.k.SHORT},{location:1,name:"a_id",count:4,type:l.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:l.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:l.k.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:l.k.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:l.k.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:l.k.SHORT},{location:8,name:"a_texCoords",count:2,type:l.k.UNSIGNED_SHORT}]})),g=r.materialManager.getMaterialProgram(e,f,"materials/label",h,i);var x;if(Object(o.k)(d)&&!_&&!g.isCompiled)return void d();e.context.setStencilFunction(l.h.EQUAL,0,255),a.useProgram(g),this._setSharedUniforms(g,e,t),r.textureManager.bindTextures(a,g,f);const y=1===m?s.displayViewMat3:s.displayMat3;this._setSizeVVUniforms(f,g,c,t),g.setUniform1f("u_mapRotation",Math.floor(s.rotation/360*254)),g.setUniform1f("u_mapAligned",m),g.setUniformMatrix3fv("u_displayMat3",y),g.setUniform1f("u_opacity",1),g.setUniform2fv("u_screenSize",e.state.size),g.setUniform1f("u_isHalo",1);const b=n.target.getVAO(a,v,h),S=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;a.bindVAO(b),a.drawElements(l.r.TRIANGLES,n.indexCount,l.k.UNSIGNED_INT,S),g.setUniform1f("u_isHalo",0),a.drawElements(l.r.TRIANGLES,n.indexCount,l.k.UNSIGNED_INT,S),a.setStencilTestEnabled(!0),a.setBlendingEnabled(!0)}},clip:x,stencil:U.a,bitmap:m,overlay:y,raster:u,rasterVF:d.a,flow:i.a,tileInfo:F.a,vtlBackground:G,vtlFill:q,vtlLine:Z,vtlCircle:Y,vtlSymbol:J,dotDensity:class extends I{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([f.Q,f.R]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=Object(o.e)(this._dotFBO),this._dotVAO=Object(o.e)(this._dotVAO)}getGeometryType(){return S.d.FILL}supportsSymbology(e){return e===S.e.DOT_DENSITY}_drawFills(e,t,n,i,a,r){const{passOptions:s}=e;if(Object(o.k)(s)&&"hittest"===s.type)super._drawFills(e,t,n,i,a,r);else{const i=this._drawDotLocations(e,t,n,a,r);this._drawDotDensity(e,t,i)}}_drawDotDensity(e,t,n){const{context:i,painter:a,rendererInfo:r,requestRender:s}=e,c=a.materialManager.getProgram(this._dotDesc);if(Object(o.k)(s)&&!c.isCompiled)return void s();const{rendererSchema:u}=r;Object(E.a)(u,"dot-density");const d=this._createDotDensityMesh(i,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:l.k.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});i.setStencilTestEnabled(!0),i.useProgram(c),c.setUniform1f("u_tileZoomFactor",1),c.setUniform1i("u_texture",this._dotSamplers[0]),c.setUniform1f("u_dotSize",Math.max(u.dotSize,1)),c.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(c,e,t),i.bindTexture(n,this._dotSamplers[0]),i.bindVAO(d),i.drawArrays(l.r.POINTS,0,262144)}_drawDotLocations(e,t,n,i,o){const{context:a,rendererInfo:r,requiredLevel:s}=e,c=a.getViewport(),{rendererSchema:u}=r;Object(E.a)(u,"dot-density");const{dotScale:d,colors:_,activeDots:m,backgroundColor:v,dotValue:p}=u;a.setViewport(0,0,512,512);const h=a.getBoundFramebufferObject(),g=this._createFBO(a);a.bindFramebuffer(g),a.setClearColor(0,0,0,0),a.clear(a.gl.COLOR_BUFFER_BIT|a.gl.STENCIL_BUFFER_BIT),a.setStencilTestEnabled(!1);const x=1/2**(s-t.key.level),y=f.V,b=y*window.devicePixelRatio*y*window.devicePixelRatio,S=1/x*(1/x),T=d?e.state.scale/d:1;return n.setUniform1f("u_tileZoomFactor",x),n.setUniform1f("u_tileDotsOverArea",b/(f.V*window.devicePixelRatio*f.V*window.devicePixelRatio)),n.setUniformMatrix4fv("u_dotColors",_),n.setUniform4fv("u_isActive",m),n.setUniform4fv("u_dotBackgroundColor",v),n.setUniform1f("u_dotValue",Math.max(1,p*T*S)),this._bindDotDensityTextures(a,n,r,y),a.drawElements(l.r.TRIANGLES,i,l.k.UNSIGNED_INT,o),a.setViewport(c.x,c.y,c.width,c.height),a.bindFramebuffer(h),g.colorTexture}_createFBO(e){if(Object(o.j)(this._dotFBO)){const t=512,n=512,i={target:l.A.TEXTURE_2D,pixelFormat:l.p.RGBA,dataType:l.q.UNSIGNED_BYTE,samplingMode:l.z.NEAREST,wrapMode:l.B.CLAMP_TO_EDGE,width:t,height:n},o={colorTarget:l.y.TEXTURE,depthStencilTarget:l.m.DEPTH_STENCIL_RENDER_BUFFER},a=new R.a(e,{width:t,height:n,internalFormat:l.s.DEPTH_STENCIL});this._dotFBO=new A.a(e,o,i,a)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,n,i){const{rendererSchema:o}=n;Object(E.a)(o,"dot-density");const a=this._createDotDensityTextures(e,i,o.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let r=0;r<a.length;r++)e.bindTexture(a[r],this._dotSamplers[r])}_createDotDensityMesh(e,t,n){if(Object(o.j)(this._dotVAO)){const i=2,o=new Int16Array(262144*i);for(let e=0;e<512;e++)for(let t=0;t<512;t++)o[i*(t+512*e)]=t,o[i*(t+512*e)+1]=e;const a=C.a.createVertex(e,l.D.STATIC_DRAW,o);this._dotVAO=new L.a(e,t,n,{geometry:a},null)}return this._dotVAO}_createDotDensityTextures(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){const i=new b.a(n);this._dotTextures=[this._allocDotDensityTexture(e,t,i),this._allocDotDensityTexture(e,t,i)]}return this._dotTextures}_allocDotDensityTexture(e,t,n){const i=new Float32Array(t*t*4);for(let o=0;o<i.length;o++)i[o]=n.getFloat();return new P.a(e,{wrapMode:l.B.REPEAT,pixelFormat:l.p.RGBA,dataType:l.q.FLOAT,samplingMode:l.z.NEAREST,width:t,height:t},i)}},heatmap:class extends w{supportsSymbology(e){return e===S.e.HEATMAP}dispose(){super.dispose(),this._accumulateOutputTexture=Object(o.e)(this._accumulateOutputTexture),this._accumulateFramebuffer=Object(o.e)(this._accumulateFramebuffer),this._resolveGradientTexture=Object(o.e)(this._resolveGradientTexture),this._tileQuad=Object(o.e)(this._tileQuad)}drawGeometry(e,t,n,i){const{defines:o}=this._loadQualityProfile(e.context);super.drawGeometry(e,t,n,i?[...i,...o]:o)}_drawMarkers(e,t,n,i,o,a,r){const{context:s}=e,c=s.getBoundFramebufferObject(),u=s.getViewport();this._prepareAccumulatePass(e,t,n,r),s.drawElements(i,o,l.k.UNSIGNED_INT,a),r||this._drawResolvePass(e,t,c,u)}_prepareAccumulatePass(e,t,n,i){const{context:o,rendererInfo:a,state:r,displayLevel:s}=e,{rendererSchema:c}=a;Object(E.a)(c,"heatmap");const{referenceScale:u,radius:d,isFieldActive:f}=c;this._loadResources(o),this._updateResources(c);const _=d*(0!==u?u/r.scale:1)*2**(t.key.level-s);n.setUniform1f("u_radius",_),i||(o.bindFramebuffer(this._accumulateFramebuffer),n.setUniform1f("u_isFieldActive",f),o.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),o.setBlendingEnabled(!0),o.setBlendFunction(l.b.ONE,l.b.ONE),o.setClearColor(0,0,0,0),o.clear(l.e.COLOR_BUFFER_BIT))}_drawResolvePass(e,t,n,i){const{context:o,painter:a,rendererInfo:r}=e,{rendererSchema:s}=r;Object(E.a)(s,"heatmap");const{radius:c,minDensity:u,densityRange:d}=s,{defines:f}=this._loadQualityProfile(o),_=a.materialManager.getProgram(V,f);o.useProgram(_),this._setSharedUniforms(_,e,t),o.bindFramebuffer(n),o.setViewport(0,0,i.width,i.height),o.setBlendFunction(l.b.ONE,l.b.ONE_MINUS_SRC_ALPHA),o.bindTexture(this._accumulateOutputTexture,8),o.bindTexture(this._resolveGradientTexture,9),_.setUniform1i("u_texture",8),_.setUniform1i("u_gradient",9),_.setUniform2f("u_densityMinAndInvRange",u,1/d),_.setUniform1f("u_densityNormalization",3/(c*c*Math.PI)),this._tileQuad.draw()}_loadResources(e){var t,n,i,o;const a=e.type===z.a.WEBGL2,{dataType:s,samplingMode:c,shadingRate:u}=this._loadQualityProfile(e);null!==(t=this._accumulateOutputTexture)&&void 0!==t||(this._accumulateOutputTexture=new P.a(e,{target:l.A.TEXTURE_2D,pixelFormat:a?l.p.RED:l.p.RGBA,internalFormat:a?s===l.q.FLOAT?l.v.R32F:l.v.R16F:l.p.RGBA,dataType:s,samplingMode:c,wrapMode:l.B.CLAMP_TO_EDGE,width:Math.round(512*u),height:Math.round(512*u)})),null!==(n=this._accumulateFramebuffer)&&void 0!==n||(this._accumulateFramebuffer=new A.a(e,{},this._accumulateOutputTexture)),null!==(i=this._resolveGradientTexture)&&void 0!==i||(this._resolveGradientTexture=new P.a(e,{target:l.A.TEXTURE_2D,pixelFormat:l.p.RGBA,dataType:l.q.UNSIGNED_BYTE,samplingMode:l.z.LINEAR,wrapMode:l.B.CLAMP_TO_EDGE})),null!==(o=this._tileQuad)&&void 0!==o||(this._tileQuad=new r.a(e,[0,0,1,0,0,1,1,1]))}_updateResources(e){const{gradientHash:t,gradient:n}=e;this._prevGradientHash!==t&&(this._resolveGradientTexture.resize(n.length/4,1),this._resolveGradientTexture.setData(n),this._prevGradientHash=t)}_loadQualityProfile(e){if(Object(o.j)(this._qualityProfile)){const{textureFloat:t,colorBufferFloat:n}=e.capabilities,{textureFloat:i,textureFloatLinear:o,textureHalfFloat:a,textureHalfFloatLinear:r,HALF_FLOAT:s}=t,{textureFloat:c,textureHalfFloat:u,floatBlend:d}=n;let f,_;const m=i&&c&&d,v=a&&u;m&&o?(f=l.q.FLOAT,_=l.z.LINEAR):v&&r?(f=s,_=l.z.LINEAR):m?(f=l.q.FLOAT,_=l.z.NEAREST):v?(f=s,_=l.z.NEAREST):N.error("Missing webgl extensions for heatmap!"),_===l.z.NEAREST&&N.warnOnce("Missing linear filtering webgl extension(s). Heatmap quality may be reduced."),this._qualityProfile={dataType:f,samplingMode:_,shadingRate:.5,defines:f===s?["heatmapPrecisionHalfFloat"]:[]}}return this._qualityProfile}},pieChart:class extends w{supportsSymbology(e){return e===S.e.PIE_CHART}_drawMarkers(e,t,n,i,o,a,r){const{context:s}=e,{rendererInfo:c}=e,{rendererSchema:u}=c;Object(E.a)(u,"pie-chart"),n.setUniform4fv("u_colors",u.colors),n.setUniform4fv("u_defaultColor",u.defaultColor),n.setUniform4fv("u_othersColor",u.othersColor),n.setUniform4fv("u_outlineColor",u.outlineColor),n.setUniform1f("u_donutRatio",u.holePercentage),n.setUniform1f("u_sectorThreshold",u.sectorThreshold),n.setUniform1f("u_outlineWidth",u.outlineWidth),s.drawElements(i,o,l.k.UNSIGNED_INT,a)}}}},226:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var i=n(134),o=n(187),a=n(210),r=n(152),s=n(195),l=n(207);const c={shaders:{vertexShader:Object(l.a)("tileInfo/tileInfo.vert"),fragmentShader:Object(l.a)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])};var u=n(159),d=n(140),f=n(190),_=n(172),m=n(160);const v=300;class p extends r.a{constructor(){super(...arguments),this._color=Object(o.a)(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState(e){let{context:t}=e;t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(d.b.ONE,d.b.ONE_MINUS_SRC_ALPHA,d.b.ONE,d.b.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(e,t){const{context:n,requestRender:o}=e;if(!t.isReady)return;if(this._loadWGLResources(n),Object(i.k)(o)&&(!this._outlineProgram.isCompiled||!this._tileInfoProgram.isCompiled))return void o();n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(d.r.LINE_STRIP,0,4);const a=this._getTexture(n,t);a?(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(a,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",a.descriptor.width,a.descriptor.height),n.drawArrays(d.r.TRIANGLE_STRIP,0,4),n.bindVAO()):n.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const t=Object(f.a)(e,s.a),n=Object(f.a)(e,c),i=new Int8Array([0,0,1,0,1,1,0,1]),o=u.a.createVertex(e,d.D.STATIC_DRAW,i),r=new m.a(e,s.a.attributes,a.a,{geometry:o}),l=new Int8Array([0,0,1,0,0,1,1,1]),_=u.a.createVertex(e,d.D.STATIC_DRAW,l),v=new m.a(e,c.attributes,a.a,{geometry:_});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=v}_getTexture(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","".concat(v)),this._canvas.setAttribute("height","".concat(32)),this._canvas.setAttribute("style","display:none"));const n=t.triangleCount;let i=t.key.id;t.triangleCount>0&&(i+=", ".concat(n));const o=this._canvas,a=o.getContext("2d");return a.font="24px sans-serif",a.textAlign="left",a.textBaseline="top",a.clearRect(0,0,v,32),n>1e5?(a.fillStyle="red",a.fillRect(0,0,v,32),a.fillStyle="black"):(a.clearRect(0,0,v,32),a.fillStyle="blue"),a.fillText(i,0,0),t.texture=new _.a(e,{target:d.A.TEXTURE_2D,pixelFormat:d.p.RGBA,dataType:d.q.UNSIGNED_BYTE,samplingMode:d.z.NEAREST,wrapMode:d.B.CLAMP_TO_EDGE},o),t.texture}}},233:function(e,t,n){"use strict";n.d(t,"a",(function(){return A}));n(135);var i=n(134),o=n(157),a=n(225),r=n(213),s=n(145),l=n(143),c=n(158),u=n(177),d=n(224),f=n(202),_=n(215),m=n(174),v=n(197),p=n(155),h=n(159),g=n(140);const x=l.a.getLogger("esri.views.2d.engine.webgl.Mesh2D"),y=(e,t,n,i)=>{let o=0;for(let a=1;a<n;a++){const n=e[2*(t+a-1)],i=e[2*(t+a-1)+1];o+=(e[2*(t+a)]-n)*(e[2*(t+a)+1]+i)}return i?o>0:o<0},b=(e,t)=>{let{coords:n,lengths:i}=e;const o=[];for(let a=0,r=0;a<i.length;r+=i[a],a+=1){const e=r,s=[];for(;a<i.length-1&&y(n,r+i[a],i[a+1],t);a+=1,r+=i[a])s.push(r+i[a]-e);const l=n.slice(2*e,2*(r+i[a])),c=Object(d.a)(l,s,2);for(const t of c)o.push(t+e)}return o};class S{constructor(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._cache={},this.vertices=e,this.indices=t,this.primitiveType=n,this.isMapSpace=i}static fromRect(e){let{x:t,y:n,width:i,height:o}=e;const a=t,r=n,s=a+i,l=r+o;return S.fromScreenExtent({xmin:a,ymin:r,xmax:s,ymax:l})}static fromPath(e){const t=Object(m.f)(new v.a,e.path,!1,!1),n=t.coords,i=new Uint32Array(b(t,!0)),o=new Uint32Array(n.length/2);for(let a=0;a<o.length;a++)o[a]=Object(p.a)(Math.floor(n[2*a]),Math.floor(n[2*a+1]));return new S({geometry:o},i,g.r.TRIANGLES)}static fromGeometry(e,t){const n=t.geometry.type;switch(n){case"polygon":return S.fromPolygon(e,t.geometry);case"extent":return S.fromMapExtent(e,t.geometry);default:return x.error(new s.a("mapview-bad-type","Unable to create a mesh from type ".concat(n),t)),S.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const n=Object(m.g)(new v.a,t,!1,!1),i=n.coords,o=new Uint32Array(b(n,!1)),a=new Uint32Array(i.length/2),r=Object(_.b)(),s=Object(_.b)();for(let l=0;l<a.length;l++)Object(f.a)(r,i[2*l],i[2*l+1]),e.toScreen(s,r),a[l]=Object(p.a)(Math.floor(s[0]),Math.floor(s[1]));return new S({geometry:a},o,g.r.TRIANGLES,!0)}static fromScreenExtent(e){let{xmin:t,xmax:n,ymin:i,ymax:o}=e;const a={geometry:new Uint32Array([Object(p.a)(t,i),Object(p.a)(n,i),Object(p.a)(t,o),Object(p.a)(t,o),Object(p.a)(n,i),Object(p.a)(n,o)])},r=new Uint32Array([0,1,2,3,4,5]);return new S(a,r,g.r.TRIANGLES)}static fromMapExtent(e,t){const[n,i]=e.toScreen([0,0],[t.xmin,t.ymin]),[o,a]=e.toScreen([0,0],[t.xmax,t.ymax]),r={geometry:new Uint32Array([Object(p.a)(n,i),Object(p.a)(o,i),Object(p.a)(n,a),Object(p.a)(n,a),Object(p.a)(o,i),Object(p.a)(o,a)])},s=new Uint32Array([0,1,2,3,4,5]);return new S(r,s,g.r.TRIANGLES)}destroy(){Object(i.k)(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)Object(i.k)(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}get elementType(){return(e=>{switch(e.BYTES_PER_ELEMENT){case 1:return g.k.UNSIGNED_BYTE;case 2:return g.k.UNSIGNED_SHORT;case 4:return g.k.UNSIGNED_INT;default:throw new s.a("Cannot get DataType of array")}})(this.indices)}getIndexBuffer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g.D.STATIC_DRAW;return this._cache.indexBuffer||(this._cache.indexBuffer=h.a.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g.D.STATIC_DRAW;return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((n,i)=>({...n,[i]:h.a.createVertex(e,t,this.vertices[i])})),{})),this._cache.vertexBuffers}}var T=n(160);const O=l.a.getLogger("esri.views.2d.engine.webgl.ClippingInfo"),E=e=>parseFloat(e)/100;class I extends u.a{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=Object(c.f)((()=>t.version),(()=>this._invalidate())),this.ready()}static fromClipArea(e,t){return new I(e,t)}_destroyGL(){Object(i.k)(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(i.k)(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,n,o){const[a,r]=t.size;if("geometry"!==this._clip.type&&this._lastWidth===a&&this._lastHeight===r||(this._lastWidth=a,this._lastHeight=r,this._destroyGL()),Object(i.j)(this._cache.vao)){const i=this._createMesh(t,this._clip),a=i.getIndexBuffer(e),r=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new T.a(e,n,o,r,a)}return this._cache.vao}_createTransforms(){return{dvs:Object(o.b)()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(e,t){const[n,i]=e.size,o="string"==typeof t.left?E(t.left)*n:t.left,a="string"==typeof t.right?E(t.right)*n:t.right,r="string"==typeof t.top?E(t.top)*i:t.top,s="string"==typeof t.bottom?E(t.bottom)*i:t.bottom,l=o,c=r;return{x:l,y:c,width:Math.max(n-a-l,0),height:Math.max(i-s-c,0)}}_createMesh(e,t){switch(t.type){case"rect":return S.fromRect(this._createScreenRect(e,t));case"path":return S.fromPath(t);case"geometry":return S.fromGeometry(e,t);default:return O.error(new s.a("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),S.fromRect({x:0,y:0,width:1,height:1})}}}var C=n(142);class A extends r.a{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((t=>t.clips=e)),this._updateClippingInfo()}_createTransforms(){return{dvs:Object(o.b)()}}doRender(e){const t=this.createRenderParams(e),{painter:n,globalOpacity:i,profiler:o,drawPhase:a}=t,r=a===C.c.LABEL||a===C.c.HIGHLIGHT?1:i*this.computedOpacity;o.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,r),this.updateTransforms(e.state),this.renderChildren(t),n.compositeLayer(t,r),o.recordContainerEnd()}renderChildren(e){Object(i.j)(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const n of this.children)n.beforeRender(e);for(const n of this._renderPasses)try{n.render(e)}catch(t){}for(const n of this.children)n.afterRender(e)}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:"clip",brushes:[a.a.clip],target:()=>this._clippingInfos,drawPhase:C.c.MAP|C.c.LABEL|C.c.LABEL_ALPHA|C.c.DEBUG|C.c.HIGHLIGHT})]}updateTransforms(e){for(const t of this.children)t.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){if(Object(i.k)(this._clippingInfos)&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null),!this.stage)return;const e=this._clips;Object(i.k)(e)&&e.length&&(this._clippingInfos=e.items.map((e=>I.fromClipArea(this.stage,e)))),this.requestRender()}}},236:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return r}));const i=!0,o=32,a=1.5,r=200},238:function(e,t,n){"use strict";n.d(t,"a",(function(){return M}));var i=n(141),o=(n(135),n(134)),a=n(308),r=n(198),s=n(140);const l=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],c=!1;var u,d={exports:{}};void 0!==(u=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(d.exports=u);const f=d.exports;var _,m={exports:{}};_=m,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(_.exports=t)}();const v=m.exports;var p,h={exports:{}};p=h,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"];void 0!==t&&(p.exports=t)}();const g=h.exports;var x=999,y=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function b(){var e,t,n,i=0,o=0,a=x,r=[],s=[],l=1,c=0,u=0,d=!1,_=!1,m="";return function(e){return s=[],null!==e?h(e.replace?e.replace(/\r\n/g,"\n"):e):(r.length&&p(r.join("")),a=10,p("(eof)"),s)};function p(e){e.length&&s.push({type:y[a],data:e,position:u,line:l,column:c})}function h(t){var r;for(i=0,n=(m+=t).length;e=m[i],i<n;){switch(r=i,a){case 0:i=O();break;case 1:case 2:i=T();break;case 3:i=E();break;case 4:i=A();break;case 11:i=C();break;case 5:i=R();break;case 9999:i=P();break;case 9:i=S();break;case x:i=b()}r!==i&&("\n"===m[r]?(c=0,++l):++c)}return o+=i,m=m.slice(i),s}function b(){return r=r.length?[]:r,"/"===t&&"*"===e?(u=o+i-1,a=0,t=e,i+1):"/"===t&&"/"===e?(u=o+i-1,a=1,t=e,i+1):"#"===e?(a=2,u=o+i,i):/\s/.test(e)?(a=9,u=o+i,i):(d=/\d/.test(e),_=/[^\w_]/.test(e),u=o+i,a=d?4:_?3:9999,i)}function S(){return/[^\s]/g.test(e)?(p(r.join("")),a=x,i):(r.push(e),t=e,i+1)}function T(){return"\r"!==e&&"\n"!==e||"\\"===t?(r.push(e),t=e,i+1):(p(r.join("")),a=x,i)}function O(){return"/"===e&&"*"===t?(r.push(e),p(r.join("")),a=x,i+1):(r.push(e),t=e,i+1)}function E(){if("."===t&&/\d/.test(e))return a=5,i;if("/"===t&&"*"===e)return a=0,i;if("/"===t&&"/"===e)return a=1,i;if("."===e&&r.length){for(;I(r););return a=5,i}if(";"===e||")"===e||"("===e){if(r.length)for(;I(r););return p(e),a=x,i+1}var n=2===r.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;I(r););return a=x,i}return r.push(e),t=e,i+1}function I(e){for(var t,n,i=0;;){if(t=v.indexOf(e.slice(0,e.length+i).join("")),n=v[t],-1===t){if(i--+e.length>0)continue;n=e.slice(0,1).join("")}return p(n),u+=n.length,(r=r.slice(n.length)).length}}function C(){return/[^a-fA-F0-9]/.test(e)?(p(r.join("")),a=x,i):(r.push(e),t=e,i+1)}function A(){return"."===e||/[eE]/.test(e)?(r.push(e),a=5,t=e,i+1):"x"===e&&1===r.length&&"0"===r[0]?(a=11,r.push(e),t=e,i+1):/[^\d]/.test(e)?(p(r.join("")),a=x,i):(r.push(e),t=e,i+1)}function R(){return"f"===e&&(r.push(e),t=e,i+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(r.push(e),t=e,i+1):/[^\d]/.test(e)?(p(r.join("")),a=x,i):(r.push(e),t=e,i+1)}function P(){if(/[^\d\w_]/.test(e)){var n=r.join("");return a=f.indexOf(n)>-1?8:g.indexOf(n)>-1?7:6,p(r.join("")),a=x,i}return r.push(e),t=e,i+1}}function S(e){return function(e){var t=b(),n=[];return(n=n.concat(t(e))).concat(t(null))}(e)}const T=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function O(e,t){for(let n=t-1;n>=0;n--){const t=e[n];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function E(e,t,n,i){i=i||n;for(const o of e)if("ident"===o.type&&o.data===n)return i in t?t[i]++:t[i]=0,E(e,t,i+"_"+t[i],i);return n}function I(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"afterVersion";function i(e,t){for(let n=t;n<e.length;n++){const t=e[n];if("operator"===t.type&&";"===t.data)return n}return null}function o(e){let t=-1,o=0,a=-1;for(let r=0;r<e.length;r++){const s=e[r];if("preprocessor"===s.type&&(s.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++o:s.data.match(/\#endif\s*.*/)&&--o),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===s.type&&/^#version/.test(s.data)&&(a=Math.max(a,r)),"afterPrecision"===n&&"keyword"===s.type&&"precision"===s.data){const t=i(e,r);if(null===t)throw new Error("precision statement not followed by any semicolons!");a=Math.max(a,t)}t<a&&0===o&&(t=r)}return t+1}const a={data:"\n",type:"whitespace"},r=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let s=o(e);r(s-1)&&e.splice(s++,0,a);for(const l of t)e.splice(s++,0,l);r(s-1)&&r(s)&&e.splice(s,0,a)}function C(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"lowp";I(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function A(e,t,n,i){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"lowp";I(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:o},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function R(e,t){let n,i,o=-1;for(let a=t;a<e.length;a++){const t=e[a];if("operator"===t.type&&("["===t.data&&(n=a),"]"===t.data)){i=a;break}"integer"===t.type&&(o=parseInt(t.data,10))}return n&&i&&e.splice(n,i-n+1),o}function P(e,t){const n=function(e){return c?L.get(e):null}(e);if(Object(o.k)(n))return n;const i=S(e);if("300 es"===function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"100",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"300 es";const i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const o of e)if("preprocessor"===o.type){const e=i.exec(o.data);if(e){const i=e[1].replace(/\s\s+/g," ");if(i===n)return i;if(i===t)return o.data="#version "+n,t;throw new Error("unknown glsl version: "+i)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+n},{type:"whitespace",data:"\n"}),null}(i,"100","300 es"))return e;let a=null,r=null;const u={},d={};for(let o=0;o<i.length;++o){const e=i[o];switch(e.type){case"keyword":t===s.u.VERTEX_SHADER&&"attribute"===e.data?e.data="in":"varying"===e.data&&(e.data=t===s.u.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(e.data.trim())&&(e.data=e.data.replace(/(2D|Cube|EXT)/g,"")),t===s.u.FRAGMENT_SHADER&&"gl_FragColor"===e.data&&(a||(a=E(i,u,"fragColor"),C(i,a,"vec4")),e.data=a),t===s.u.FRAGMENT_SHADER&&"gl_FragData"===e.data){const t=R(i,o+1),n=E(i,u,"fragData");A(i,n,"vec4",t,"mediump"),e.data=n}else t===s.u.FRAGMENT_SHADER&&"gl_FragDepthEXT"===e.data&&(r||(r=E(i,u,"gl_FragDepth")),e.data=r);break;case"ident":if(l.includes(e.data)){if(t===s.u.VERTEX_SHADER&&O(i,o))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");e.data in d||(d[e.data]=E(i,u,e.data)),e.data=d[e.data]}}}for(let o=i.length-1;o>=0;--o){const e=i[o];if("preprocessor"===e.type){const t=e.data.match(/\#extension\s+(.*)\:/);if(t&&t[1]&&T.includes(t[1].trim())){const e=i[o+1];i.splice(o,e&&"whitespace"===e.type?2:1)}const n=e.data.match(/\#ifdef\s+(.*)/);n&&n[1]&&T.includes(n[1].trim())&&(e.data="#if 1");const a=e.data.match(/\#ifndef\s+(.*)/);a&&a[1]&&T.includes(a[1].trim())&&(e.data="#if 0")}}return function(e,t){return c&&L.set(e,t),t}(e,function(e){return e.map((e=>"eof"!==e.type?e.data:"")).join("")}(i))}const L=new Map;class M{constructor(e,t,n,i){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Map;this._context=e,this._locations=i,this._uniformBlockBindings=o,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),this._context.type===r.a.WEBGL2&&(t=P(t,s.u.VERTEX_SHADER),n=P(n,s.u.FRAGMENT_SHADER)),this._vShader=D(this._context,s.u.VERTEX_SHADER,t),this._fShader=D(this._context,s.u.FRAGMENT_SHADER,n),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(s.t.Shader,this),Object(a.c)()&&(this.vertexShader=t,this.fragmentShader=n)}get glName(){if(Object(o.k)(this._glName))return this._glName;if(Object(o.j)(this._vShader))return null;const e=this._context.gl,t=e.createProgram();if(e.attachShader(t,this._vShader),e.attachShader(t,this._fShader),this._locations.forEach(((n,i)=>e.bindAttribLocation(t,n,i))),e.linkProgram(t),Object(a.c)()&&!e.getProgramParameter(t,e.LINK_STATUS)&&console.error("Could not link shader\nvalidated: ".concat(e.getProgramParameter(t,e.VALIDATE_STATUS),", gl error ").concat(e.getError(),", vertex: ").concat(e.getShaderParameter(this._vShader,e.COMPILE_STATUS),", fragment: ").concat(e.getShaderParameter(this._fShader,e.COMPILE_STATUS),", info log: ").concat(e.getProgramInfoLog(t),", vertex source: ").concat(this.vertexShader,", fragment source: ").concat(this.fragmentShader)),this._context.type===r.a.WEBGL2){const n=e;for(const[e,i]of this._uniformBlockBindings){const o=n.getUniformBlockIndex(t,e);o<4294967295&&n.uniformBlockBinding(t,o,i)}}return this._glName=t,this._context.instanceCounter.increment(s.t.Program,this),t}get hasGLName(){return Object(o.k)(this._glName)}get isCompiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl;this._vShader&&(e.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(s.t.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(s.t.Program,this))}ref(){++this._refCount}_getUniformLocation(e){return void 0===this._nameToUniformLocation[e]&&(++z.numUniforms,this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this.glName,e)),this._nameToUniformLocation[e]}hasUniform(e){return null!==this._getUniformLocation(e)}setUniform1i(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1iv(e,t){w(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}setUniform2iv(e,t){w(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}setUniform3iv(e,t){w(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}setUniform4iv(e,t){w(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}setUniform1f(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1fv(e,t){w(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}setUniform2f(e,t,n){const i=this._nameToUniform2.get(e);void 0===i?(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),this._nameToUniform2.set(e,[t,n])):t===i[0]&&n===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),i[0]=t,i[1]=n)}setUniform2fv(e,t){w(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}setUniform3f(e,t,n,i){const o=this._nameToUniform3.get(e);void 0===o?(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),this._nameToUniform3[e]=[t,n,i]):t===o[0]&&n===o[1]&&i===o[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),o[0]=t,o[1]=n,o[2]=i)}setUniform3fv(e,t){w(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(this._getUniformLocation(e),t)}setUniform4f(e,t,n,i,o){const a=this._nameToUniform4.get(e);void 0===a?(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,o),this._nameToUniform4.set(e,[t,n,i,o])):void 0!==a&&t===a[0]&&n===a[1]&&i===a[2]&&o===a[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,o),a[0]=t,a[1]=n,a[2]=i,a[3]=o)}setUniform4fv(e,t){w(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(this._getUniformLocation(e),t)}setUniformMatrix3fv(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];w(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t)}setUniformMatrix4fv(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];w(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t)}stop(){}}function D(e,t,n){const i=e.gl,o=i.createShader(t);return i.shaderSource(o,n),i.compileShader(o),Object(a.c)()&&!i.getShaderParameter(o,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===s.u.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(o)),console.error(function(e){let t=2;return e.replace(/\n/g,(()=>"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"))}(n))),z.enabled&&(z.compiledLOC+=n.match(/\n/g).length+1),o}function w(e,t,n){const o=e.get(t);return o?Object(i.m)(o,n):(e.set(t,Array.from(n)),!0)}const z={compiledLOC:0,numUniforms:0,enabled:!1}},242:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(e){this.readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(t.has(e))return t.get(e);const n=this._read(e);if(!n)throw new Error("cannot find shader file ".concat(e));const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let o=i.exec(n);const a=[];for(;null!=o;)a.push({path:o[1],start:o.index,length:o[0].length}),o=i.exec(n);let r=0,s="";return a.forEach((e=>{s+=n.slice(r,e.start),s+=t.has(e.path)?"":this._resolve(e.path,t),r=e.start+e.length})),s+=n.slice(r),t.set(e,s),s}_read(e){return this.readFile(e)}}},249:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n(134),o=n(157),a=n(152),r=n(140);class s extends a.a{constructor(){super(...arguments),this._visualState={time:0,dvsMat3:Object(o.b)(),displayViewMat3:Object(o.b)()}}dispose(){}prepareState(e){const{context:t}=e;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(r.h.EQUAL,0,255)}draw(e,t){const{requestRender:n}=e,{displayData:o}=t;if(Object(i.j)(o))return;if("loaded"===o.state.name&&o.attach(e),"attached"!==o.state.name)return;const a=o.state.resources;a.ready||!Object(i.k)(n)?(this._visualState.time=e.time/1e3,this._visualState.dvsMat3=t.transforms.dvs,this._visualState.displayViewMat3=e.state.displayViewMat3,o.flowStyle.render(e,this._visualState,a),o.flowStyle.animated&&Object(i.k)(n)&&n()):n()}}},250:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n(134),o=n(152),a=n(140);const r=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),s={beaufort_ft:r,beaufort_m:r,beaufort_km:r,beaufort_mi:r,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class l extends o.a{constructor(){super(...arguments),this._desc={magdir:{vsPath:"raster/magdir",fsPath:"raster/magdir",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])},scalar:{vsPath:"raster/scalar",fsPath:"raster/scalar",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])}}}dispose(){}prepareState(e,t){let{context:n}=e;n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(a.b.ONE,a.b.ONE_MINUS_SRC_ALPHA,a.b.ONE,a.b.ONE_MINUS_SRC_ALPHA),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilOp(a.w.KEEP,a.w.KEEP,a.w.REPLACE),n.setStencilFunction(a.h.EQUAL,t.stencilRef,255)}draw(e,t){if(Object(i.j)(t.source)||0===t.source.validPixelCount)return;const{timeline:n}=e;if(n.begin(this.name),t.updateVectorFieldVAO(e),"scalar"===e.renderPass){const n=t.vaoData.scalar;n&&this._drawScalars(e,t,n.vao,n.elementCount)}else{const n=t.vaoData.magdir;n&&this._drawTriangles(e,t,n.vao,n.elementCount)}n.end(this.name)}_drawTriangles(e,t,n,o){const{context:r,painter:l,requestRender:c}=e,{symbolizerParameters:u}=t,d=u.dataRange?["dataRange"]:[];"geographic"===u.rotationType&&d.push("rotationGeographic");const f=l.materialManager.getProgram(this._desc.magdir,d);if(Object(i.k)(c)&&!f.isCompiled)return void c();r.useProgram(f);const{coordScale:_,opacity:m,transforms:v}=t;f.setUniform2fv("u_coordScale",_),f.setUniform1f("u_opacity",m),f.setUniformMatrix3fv("u_dvsMat3",v.dvs);const{style:p,dataRange:h,rotation:g,symbolPercentRange:x}=u;f.setUniform4fv("u_colors",s[p]||s.single_arrow),f.setUniform2fv("u_dataRange",h),f.setUniform1f("u_rotation",g),f.setUniform2fv("u_symbolPercentRange",x);const y=this._getSymbolSize(e,t);f.setUniform2fv("u_symbolSize",y),r.bindVAO(n),r.drawElements(a.r.TRIANGLES,o,a.k.UNSIGNED_INT,0)}_drawScalars(e,t,n,o){const{context:r,painter:s,requestRender:l}=e,{symbolizerParameters:c}=t,u=[];"wind_speed"===c.style?u.push("innerCircle"):c.dataRange&&u.push("dataRange"),"geographic"===c.rotationType&&u.push("rotationGeographic");const d=s.materialManager.getProgram(this._desc.scalar,u);if(Object(i.k)(l)&&!d.isCompiled)return void l();r.useProgram(d);const{coordScale:f,opacity:_,transforms:m}=t;d.setUniform2fv("u_coordScale",f),d.setUniform1f("u_opacity",_),d.setUniformMatrix3fv("u_dvsMat3",m.dvs);const{dataRange:v,symbolPercentRange:p}=c;d.setUniform2fv("u_dataRange",v),d.setUniform2fv("u_symbolPercentRange",p);const h=this._getSymbolSize(e,t);d.setUniform2fv("u_symbolSize",h),r.bindVAO(n),r.drawElements(a.r.TRIANGLES,o,a.k.UNSIGNED_INT,0)}_getSymbolSize(e,t){const n=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:i}=t.symbolizerParameters;return[i/(Math.round((t.width-t.offset[0])/i)*i)/n,i/(Math.round((t.height-t.offset[1])/i)*i)/n]}}},252:function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var i=n(136),o=n(162),a=n(135),r=n(147),s=n(143),l=n(139),c=(n(138),n(137)),u=n(355),d=n(345);const f=-1;let _=class extends o.a{constructor(e){super(e),this._from=null,this._to=null,this._final=null,this._current=[],this._time=0,this.duration=Object(a.a)("mapview-transitions-duration"),this.effects=[]}set effect(e){if(this._get("effect")!==(e=e||"")){this._set("effect",e);try{this._transitionTo(m(e))}catch(t){this._transitionTo([]),s.a.getLogger(this.declaredClass).warn("Invalid Effect",{effect:e,error:t})}}}get hasEffects(){return this.transitioning||!!this.effects.length}set scale(e){this._updateForScale(e)}get transitioning(){return null!==this._to}canTransitionTo(e){try{return this.scale>0&&v(this._current,m(e),this.scale)}catch{return!1}}transitionStep(e,t){this._applyTimeTransition(e),this._updateForScale(t)}end(){this._applyTimeTransition(this.duration)}_transitionTo(e){this.scale>0&&v(this._current,e,this.scale)?(this._final=e,this._to=Object(r.a)(e),function(e,t,n){var i,o;const a=e.length>t.length?e:t,r=e.length>t.length?t:e,s=r[r.length-1],l=null!==(i=null===s||void 0===s?void 0:s.scale)&&void 0!==i?i:n,c=null!==(o=null===s||void 0===s?void 0:s.effects)&&void 0!==o?o:[];for(let u=r.length;u<a.length;u++)r.push({scale:l,effects:[...c]});for(let u=0;u<a.length;u++)r[u].scale=r[u].scale===f?n:r[u].scale,a[u].scale=a[u].scale===f?n:a[u].scale,Object(d.c)(r[u].effects,a[u].effects)}(this._current,this._to,this.scale),this._from=Object(r.a)(this._current),this._time=0):(this._from=this._to=this._final=null,this._current=e),this._set("effects",this._current[0]?Object(r.a)(this._current[0].effects):[])}_applyTimeTransition(e){if(!(this._to&&this._from&&this._current&&this._final))return;this._time+=e;const t=Math.min(1,this._time/this.duration);for(let n=0;n<this._current.length;n++){const e=this._current[n],i=this._from[n],o=this._to[n];e.scale=p(i.scale,o.scale,t);for(let n=0;n<e.effects.length;n++){const a=e.effects[n],r=i.effects[n],s=o.effects[n];a.interpolate(r,s,t)}}1===t&&(this._current=this._final,this._set("effects",this._current[0]?Object(r.a)(this._current[0].effects):[]),this._from=this._to=this._final=null)}_updateForScale(e){if(this._set("scale",e),0===this._current.length)return;const t=this._current,n=this._current.length-1;let i,o,a=1;if(1===t.length||e>=t[0].scale)o=i=t[0].effects;else if(e<=t[n].scale)o=i=t[n].effects;else for(let r=0;r<n;r++){const n=t[r],s=t[r+1];if(n.scale>=e&&s.scale<=e){a=(e-n.scale)/(s.scale-n.scale),i=n.effects,o=s.effects;break}}for(let r=0;r<this.effects.length;r++)this.effects[r].interpolate(i[r],o[r],a)}};function m(e){const t=Object(u.a)(e)||[];return function(e){const t=e[0];return!!t&&"type"in t}(t)?[{scale:f,effects:t}]:t}function v(e,t,n){var i,o,a,r;return null===(i=e[0])||void 0===i||!i.effects||null===(o=t[0])||void 0===o||!o.effects||!(((null===(a=e[0])||void 0===a?void 0:a.scale)===f||(null===(r=t[0])||void 0===r?void 0:r.scale)===f)&&(e.length>1||t.length>1)&&n<=0)&&Object(d.a)(e[0].effects,t[0].effects)}function p(e,t,n){return e+(t-e)*n}Object(i.a)([Object(l.b)()],_.prototype,"_to",void 0),Object(i.a)([Object(l.b)()],_.prototype,"duration",void 0),Object(i.a)([Object(l.b)({value:""})],_.prototype,"effect",null),Object(i.a)([Object(l.b)({readOnly:!0})],_.prototype,"effects",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],_.prototype,"hasEffects",null),Object(i.a)([Object(l.b)({value:0})],_.prototype,"scale",null),Object(i.a)([Object(l.b)({readOnly:!0})],_.prototype,"transitioning",null),_=Object(i.a)([Object(c.a)("esri.layers.effects.EffectView")],_)},253:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return _}));var i=n(134),o=n(189),a=n(157),r=n(171),s=n(274),l=n(177),c=n(140),u=n(214);const d={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class f extends l.a{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=n}destroy(){var e;null!==(e=this.getTextures())&&void 0!==e&&e.textures.forEach((e=>e.dispose())),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}get symbolizerParameters(){return this._symbolizerParameters||d}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdschanged(e)&&this.invalidateTexture()}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e)?c.z.LINEAR:c.z.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:Object(a.b)()}}setTransform(e){const t=Object(o.b)(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,s=a*this.width,l=a*this.height,c=Math.PI*this.rotation/180;Object(o.c)(t,t,Object(r.b)(n,i)),Object(o.c)(t,t,Object(r.b)(s/2,l/2)),Object(o.k)(t,t,-c),Object(o.c)(t,t,Object(r.b)(-s/2,-l/2)),Object(o.h)(t,t,Object(r.b)(s,l)),Object(o.i)(this.transforms.dvs,e.displayViewMat3,t)}getTextures(){if(!this._rasterTexture)return null;const e=[],t=[];return this._transformGridTexture&&(t.push(this._transformGridTexture),e.push("u_transformGrid")),this._rasterTexture&&(t.push(this._rasterTexture),e.push("u_image")),this._colormapTexture&&(t.push(this._colormapTexture),e.push("u_colormap")),{names:e,textures:t}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture(e){var t,n,i;let{context:o}=e;if(!this.stage)return null!==(t=this._rasterTexture)&&void 0!==t&&t.dispose(),null!==(n=this._transformGridTexture)&&void 0!==n&&n.dispose(),null!==(i=this._colormapTexture)&&void 0!==i&&i.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const a=this._isValidSource(this.source);a&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(o)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(o),this._rasterTexture&&(a?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Object(u.c)(o,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}_createOrDestroyRasterTexture(e){var t,n;const o=Object(i.k)(this.source)?Object(s.d)(this.source,this.bandIds):null;if(!this._isValidSource(o))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const a=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(a)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=null===(t=e.capabilities.textureFloat)||void 0===t?void 0:t.textureFloatLinear;const r=this._getTextureSamplingMethod(this.interpolation),l=this.isRendereredSource||!(null!==(n=e.capabilities.textureFloat)&&void 0!==n&&n.textureFloat);this._rasterTexture=Object(u.b)(e,o,r,l),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return Object(i.k)(e)&&(null===(t=e.pixels)||void 0===t?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t,colormap:n}=this.symbolizerParameters,o="lut"===t||"stretch"===t&&Object(i.k)(n);return!this._supportsBilinearTexture||o||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,n=this.symbolizerParameters.colormap;return n?t?n.length!==t.length||n.some(((e,n)=>e!==t[n]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Object(u.a)(e,n),void(this._colormap=n)):void 0:(this._colormapTexture=Object(u.a)(e,n),void(this._colormap=n)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}function _(e){return Object(i.k)(e.source)}},266:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var i=n(136),o=n(162),a=n(208),r=n(201),s=n(264),l=n(143),c=n(134),u=n(282),d=n(139),f=(n(141),n(135),n(138),n(137));let _=class extends(Object(r.b)(Object(s.a)(Object(u.b)(a.a.EventedMixin(o.a))))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch((e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",n=this.layer&&this.layer.title||"no title";l.a.getLogger(this.declaredClass).error("#resolve()","Failed to resolve layer view (layer title: '".concat(n,"', id: '").concat(t,"')"),e)}}))}get fullOpacity(){return Object(c.r)(this.get("layer.opacity"),1)*Object(c.r)(this.get("parent.fullOpacity"),1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){var e;return!this.suspended&&!0===(null===(e=this.layer)||void 0===e?void 0:e.legendEnabled)}get updating(){var e;return!((null===(e=this.updatingHandles)||void 0===e||!e.updating)&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){var e;return!0===(null===(e=this.layer)||void 0===e?void 0:e.visible)}set visible(e){void 0!==e?this._override("visible",e):this._clearOverride("visible")}canResume(){var e,t,n;return this.visible&&(null===(e=this.layer)||void 0===e?void 0:e.loaded)&&!(null!==(t=this.parent)&&void 0!==t&&t.suspended)&&(null===(n=this.view)||void 0===n?void 0:n.ready)||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{};return this.view&&this.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};Object(i.a)([Object(d.b)()],_.prototype,"fullOpacity",null),Object(i.a)([Object(d.b)()],_.prototype,"layer",void 0),Object(i.a)([Object(d.b)()],_.prototype,"parent",void 0),Object(i.a)([Object(d.b)({readOnly:!0})],_.prototype,"suspended",null),Object(i.a)([Object(d.b)({readOnly:!0})],_.prototype,"suspendInfo",null),Object(i.a)([Object(d.b)({readOnly:!0})],_.prototype,"legendEnabled",null),Object(i.a)([Object(d.b)({type:Boolean,readOnly:!0})],_.prototype,"updating",null),Object(i.a)([Object(d.b)({readOnly:!0})],_.prototype,"updatingProgress",null),Object(i.a)([Object(d.b)()],_.prototype,"visible",null),Object(i.a)([Object(d.b)()],_.prototype,"view",void 0),_=Object(i.a)([Object(f.a)("esri.views.layers.LayerView")],_);const m=_},267:function(e,t,n){"use strict";n.d(t,"a",(function(){return A}));var i=n(136),o=n(185),a=n(284),r=n(145),s=n(158),l=n(139),c=(n(141),n(135),n(138),n(137)),u=n(213),d=n(150);n(143),n(221);let f=class extends d.a{};f=Object(i.a)([Object(c.a)("esri.views.layers.support.ClipArea")],f);const _=f;var m;let v=m=class extends _{constructor(){super(...arguments),this.type="rect",this.left=null,this.right=null,this.top=null,this.bottom=null}clone(){return new m({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}get version(){return(this._get("version")||0)+1}};Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],v.prototype,"left",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],v.prototype,"right",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],v.prototype,"top",void 0),Object(i.a)([Object(l.b)({type:[Number,String],json:{write:!0}})],v.prototype,"bottom",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],v.prototype,"version",null),v=m=Object(i.a)([Object(c.a)("esri.views.layers.support.ClipRect")],v);const p=v;n(163);var h,g=n(232),x=n(153),y=n(161),b=n(204);const S={base:g.a,key:"type",typeMap:{extent:y.a,polygon:b.a}};let T=h=class extends _{constructor(){super(...arguments),this.type="geometry",this.geometry=null}get version(){return(this._get("version")||0)+1}clone(){return new h({geometry:this.geometry.clone()})}};Object(i.a)([Object(l.b)({types:S,json:{read:x.a,write:!0}})],T.prototype,"geometry",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],T.prototype,"version",null),T=h=Object(i.a)([Object(c.a)("esri.views.layers.support.Geometry")],T);const O=T;let E=class extends _{constructor(){super(...arguments),this.type="path",this.path=[]}get version(){return(this._get("version")||0)+1}};Object(i.a)([Object(l.b)({type:[[[Number]]],json:{write:!0}})],E.prototype,"path",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],E.prototype,"version",null),E=Object(i.a)([Object(c.a)("esri.views.layers.support.Path")],E);const I=E,C=o.a.ofType({key:"type",base:_,typeMap:{rect:p,path:I,geometry:O}}),A=e=>{let t=class extends e{constructor(){super(...arguments),this.attached=!1,this.clips=new C,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1}initialize(){var e,t,n,i;const o=null===(e=null===(t=this.view)||void 0===t?void 0:t.spatialReferenceLocked)||void 0===e||e;(null===(n=this.view)||void 0===n?void 0:n.spatialReference)&&o&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new r.a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new u.a),this.container.fadeTransitionEnabled=!0,this.container.opacity=0,this.container.clips=this.clips,this.handles.add([Object(s.f)((()=>this.suspended),(e=>{this.container&&(this.container.visible=!e),this.view&&!e&&this.updateRequested&&this.view.requestUpdate()}),s.e),Object(s.f)((()=>{var e,t;return null!==(e=null===(t=this.layer)||void 0===t?void 0:t.opacity)&&void 0!==e?e:1}),(e=>{this.container&&(this.container.opacity=e)}),s.e),Object(s.f)((()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal"),(e=>{this.container&&(this.container.blendMode=e)}),s.e),Object(s.f)((()=>this.layer&&"effect"in this.layer?this.layer.effect:null),(e=>{this.container&&(this.container.effect=e)}),s.e),Object(s.b)((()=>this.clips),"change",(()=>{this.container&&(this.container.clips=this.clips)}))]),null!==(i=this.view)&&void 0!==i&&i.whenLayerView?this.view.whenLayerView(this.layer).then((e=>{e===this&&this.processAttach()}),(()=>{})):this.when().then((()=>{this.processAttach()}),(()=>{})))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){var e;const t=null===(e=this.view)||void 0===e?void 0:e.spatialReference;return null==t||this.supportsSpatialReference(t)}get updating(){var e;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!(null===(e=this.updatingHandles)||void 0===e||!e.updating))}get visibleAtCurrentScale(){return this.isVisibleAtScale(this.view.scale)}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.detach(),this.updateRequested=!1)}isVisibleAtScale(e){const t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;const{minScale:n,maxScale:i}=t;return(0===n||e<=n)&&(0===i||e>=i)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,t){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),t=!this.spatialReferenceSupported,n=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),n&&(e.outsideScaleRange=n),e}};return Object(i.a)([Object(l.b)()],t.prototype,"attached",void 0),Object(i.a)([Object(l.b)({type:C,set(e){const t=Object(a.b)(e,this._get("clips"),C);this._set("clips",t)}})],t.prototype,"clips",void 0),Object(i.a)([Object(l.b)()],t.prototype,"container",void 0),Object(i.a)([Object(l.b)()],t.prototype,"moving",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"updateParameters",void 0),Object(i.a)([Object(l.b)()],t.prototype,"updateRequested",void 0),Object(i.a)([Object(l.b)()],t.prototype,"updating",null),Object(i.a)([Object(l.b)()],t.prototype,"view",void 0),Object(i.a)([Object(l.b)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=Object(i.a)([Object(c.a)("esri.views.2d.layers.LayerView2D")],t),t}},276:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(189),o=n(177),a=n(231);class r extends o.a{constructor(e,t,n,i,o){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:i,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:o;super(),this.triangleCountReportedInDebug=0,this.triangleCount=0,this.texture=null,this.key=new a.a(e),this.x=t,this.y=n,this.width=i,this.height=o,this.rangeX=r,this.rangeY=s}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}setTransform(e,t){const n=t/(e.resolution*e.pixelRatio),o=this.transforms.tileMat3,[a,r]=e.toScreenNoRotation([0,0],[this.x,this.y]),s=this.width/this.rangeX*n,l=this.height/this.rangeY*n;Object(i.l)(o,s,0,0,0,l,0,a,r,1),Object(i.i)(this.transforms.dvs,e.displayViewMat3,o)}}},293:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(135),o=n(142),a=n(233),r=n(226),s=n(222);const l=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;class c extends a.a{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(l),this.setStencilReference(e),super.renderChildren(e)}createRenderParams(e){const{state:t}=e,n=super.createRenderParams(e);return n.requiredLevel=this._tileInfoView.getClosestInfoForScale(t.scale).level,n.displayLevel=this._tileInfoView.tileInfo.scaleToZoom(t.scale),n}prepareRenderPasses(e){const t=super.prepareRenderPasses(e);return t.push(e.registerRenderPass({name:"stencil",brushes:[s.a],drawPhase:o.c.DEBUG|o.c.MAP|o.c.HIGHLIGHT,target:()=>this.getStencilTarget()})),Object(i.a)("esri-tiles-debug")&&t.push(e.registerRenderPass({name:"tileInfo",brushes:[r.a],drawPhase:o.c.DEBUG,target:()=>this.children})),t}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const n=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,n)}}setStencilReference(e){let t=1;for(const n of this.children)n.stencilRef=t++}}},364:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var i=n(134);class o{constructor(e,t,n){this.pixelBlock=e,this.extent=t,this.originalPixelBlock=n}get width(){return Object(i.k)(this.pixelBlock)?this.pixelBlock.width:0}get height(){return Object(i.k)(this.pixelBlock)?this.pixelBlock.height:0}render(e){const t=this.pixelBlock;if(Object(i.j)(t))return;const n=this.filter({pixelBlock:t});if(Object(i.j)(n.pixelBlock))return;const o=n.pixelBlock.getAsRGBA(),a=e.createImageData(n.pixelBlock.width,n.pixelBlock.height);a.data.set(o),e.putImageData(a,0,0)}getRenderedRasterPixels(){const e=this.filter({pixelBlock:this.pixelBlock});return Object(i.j)(e.pixelBlock)?null:{width:e.pixelBlock.width,height:e.pixelBlock.height,renderedRasterPixels:new Uint8Array(e.pixelBlock.getAsRGBA().buffer)}}}},380:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var i=n(134),o=n(189),a=n(157),r=n(171),s=n(177),l=n(364),c=n(140),u=n(172);function d(e,t,n){const i={target:c.A.TEXTURE_2D,pixelFormat:c.p.RGBA,internalFormat:c.p.RGBA,dataType:c.q.UNSIGNED_BYTE,wrapMode:c.B.CLAMP_TO_EDGE};return t&&n&&(i.width=t,i.height=n),new u.a(e,i)}class f extends s.a{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1?arguments[1]:void 0,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.requestRenderOnSourceChangedEnabled=n,this._textureInvalidated=!0,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._width=void 0,this.x=0,this.y=0,this.blendFunction=t,this.source=e,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null)}get isSourceScaled(){return this.width!==this.sourceWidth||this.height!==this.sourceHeight}get height(){return void 0!==this._height?this._height:this.sourceHeight}set height(e){this._height=e}get source(){return this._source}set source(e){this._source=e,this.invalidateTexture()}get sourceHeight(){return this._source instanceof HTMLImageElement?this._source.naturalHeight:this._source.height}get sourceWidth(){return this._source instanceof HTMLImageElement?this._source.naturalWidth:this._source.width}get width(){return void 0!==this._width?this._width:this.sourceWidth}set width(e){this._width=e}beforeRender(e){super.beforeRender(e),this.updateTexture(e.context)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRenderOnSourceChangedEnabled&&this.requestRender())}_createTransforms(){return{dvs:Object(a.b)()}}setTransform(e){const t=Object(o.b)(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,s=a*this.width,l=a*this.height,c=Math.PI*this.rotation/180;Object(o.c)(t,t,Object(r.b)(n,i)),Object(o.c)(t,t,Object(r.b)(s/2,l/2)),Object(o.k)(t,t,-c),Object(o.c)(t,t,Object(r.b)(-s/2,-l/2)),Object(o.h)(t,t,Object(r.b)(s,l)),Object(o.i)(this.transforms.dvs,e.displayViewMat3,t)}setSamplingProfile(e){this._texture&&(e.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(e.samplingMode))}bind(e,t){this._texture&&e.bindTexture(this._texture,t)}updateTexture(e){var t;if(!this.stage)return null!==(t=this._texture)&&void 0!==t&&t.dispose(),void(this._texture=null);if(!this._textureInvalidated)return;this._textureInvalidated=!1,this._texture||(this.source?this._texture=d(e,this.sourceWidth,this.sourceHeight):this._texture=d(e));const n=this.source;if(n){if(this._texture.resize(this.sourceWidth,this.sourceHeight),(o=n)&&"render"in o)if(n instanceof l.a){const e=n.getRenderedRasterPixels();this._texture.setData(Object(i.k)(e)?e.renderedRasterPixels:null)}else this._texture.setData(function(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,e.render(t.getContext("2d")),t}(n));else(function(e){return e&&!("render"in e)})(n)&&this._texture.setData(n);this.ready()}else this._texture.setData(null);var o}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}}},398:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n(136),o=n(143),a=n(148),r=n(158),s=n(139),l=(n(141),n(135),n(138),n(137));const c=e=>{let t=class extends e{initialize(){this.handles.add(Object(r.b)((()=>this.layer),"refresh",(e=>{this.doRefresh(e.dataChanged).catch((e=>{Object(a.j)(e)||o.a.getLogger(this.declaredClass).error(e)}))})),"RefreshableLayerView")}};return Object(i.a)([Object(s.b)()],t.prototype,"layer",void 0),t=Object(i.a)([Object(l.a)("esri.layers.mixins.RefreshableLayerView")],t),t}},677:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n(165),o=n(157),a=n(380),r=n(276);class s extends r.a{constructor(e,t,n,i,o){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;super(e,t,n,i,o),this.bitmap=new a.a(r,"standard",!1),this.bitmap.coordScale=[i,o],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){super.beforeRender(e),this.bitmap.beforeRender(e)}afterRender(e){super.afterRender(e),this.bitmap.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:Object(o.b)(),tileMat3:Object(o.b)()}}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}var l=n(225),c=n(142),u=n(293);class d extends u.a{get requiresDedicatedFBO(){return this.children.some((e=>"additive"===e.bitmap.blendFunction))}createTile(e){const t=this._tileInfoView.getTileBounds(Object(i.g)(),e),[n,o]=this._tileInfoView.tileInfo.size;return new s(e,t[0],t[3],n,o)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"bitmap (tile)",brushes:[l.a.bitmap],target:()=>this.children.map((e=>e.bitmap)),drawPhase:c.c.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===c.c.MAP&&super.doRender(e)}}},864:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n(136),o=(n(143),n(138),n(141),n(135),n(221),n(137)),a=n(677);const r=e=>{let t=class extends e{attach(){this.view.timeline.record("".concat(this.layer.title," (BitmapTileLayer) Attach")),this._bitmapView=new a.a(this._tileInfoView),this.container.addChild(this._bitmapView)}detach(){var e;this.container.removeChild(this._bitmapView),null===(e=this._bitmapView)||void 0===e||e.removeAllChildren()}};return t=Object(i.a)([Object(o.a)("esri.views.2d.layers.BitmapTileLayerView2D")],t),t}},865:function(e,t,n){"use strict";function i(e,t,n,i){if(n.level===i.level)return t;const a=e.tileInfo.size,r=e.getTileResolution(n.level),s=e.getTileResolution(i.level);let l=e.getLODInfoAt(i.level);const c=l.getXForColumn(i.col),u=l.getYForRow(i.row);l=e.getLODInfoAt(n.level);const d=l.getXForColumn(n.col),f=l.getYForRow(n.row),_=function(e){return e instanceof HTMLImageElement?e.naturalWidth:e.width}(t)/a[0],m=function(e){return e instanceof HTMLImageElement?e.naturalHeight:e.height}(t)/a[1],v=Math.round(_*((c-d)/r)),p=Math.round(m*(-(u-f)/r)),h=Math.round(_*a[0]*(s/r)),g=Math.round(m*a[1]*(s/r)),x=o(a);return x.getContext("2d").drawImage(t,v,p,h,g,0,0,a[0],a[1]),x}function o(e){const t=document.createElement("canvas");return[t.width,t.height]=e,t}n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}))}}]);