(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[3],{274:function(t,e,i){"use strict";i.d(e,"a",(function(){return v})),i.d(e,"b",(function(){return o})),i.d(e,"c",(function(){return a})),i.d(e,"d",(function(){return r})),i.d(e,"e",(function(){return j})),i.d(e,"f",(function(){return l})),i.d(e,"g",(function(){return h})),i.d(e,"h",(function(){return p})),i.d(e,"i",(function(){return f})),i.d(e,"j",(function(){return c})),i.d(e,"k",(function(){return d})),i.d(e,"l",(function(){return b}));var n=i(134),s=i(449);function l(t){return Object(n.k)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t,e){if(null===e||void 0===e||!e.length||!l(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new s.a({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let n=0;i[0][0]<0&&(n=i[0][0]);const s=Math.max(256,i[i.length-1][0]-n+1),l=new Uint8Array(4*s),r=[];let a,o=0,h=0;const c=5===i[0].length;if(s>65536)return i.forEach((t=>{r[t[0]-n]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:n,alphaSpecified:c};if(t.fillUnspecified)for(a=i[h],o=a[0]-n;o<s;o++)l[4*o]=a[1],l[4*o+1]=a[2],l[4*o+2]=a[3],l[4*o+3]=c?a[4]:255,o===a[0]-n&&(a=h===i.length-1?a:i[++h]);else for(o=0;o<i.length;o++)a=i[o],h=4*(a[0]-n),l[h]=a[1],l[h+1]=a[2],l[h+2]=a[3],l[h+3]=c?a[4]:255;return{indexedColormap:l,offset:n,alphaSpecified:c}}function o(t,e){if(!l(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),n=i.pixels;let s=i.mask;const r=i.width*i.height;if(1!==n.length)return t;const{indexedColormap:a,indexed2DColormap:o,offset:h,alphaSpecified:c}=e,f=a.length-1;let u=0;const p=n[0],x=new Uint8Array(p.length),d=new Uint8Array(p.length),m=new Uint8Array(p.length);let g,y=0;if(a)if(s)for(u=0;u<r;u++)s[u]&&(y=4*(p[u]-h),y<h||y>f?s[u]=0:(x[u]=a[y],d[u]=a[y+1],m[u]=a[y+2],s[u]=a[y+3]));else{for(s=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-h),y<h||y>f?s[u]=0:(x[u]=a[y],d[u]=a[y+1],m[u]=a[y+2],s[u]=a[y+3]);i.mask=s}else if(s)for(u=0;u<r;u++)s[u]&&(g=o[p[u]],x[u]=g[0],d[u]=g[1],m[u]=g[2],s[u]=g[3]);else{for(s=new Uint8Array(r),u=0;u<r;u++)g=o[p[u]],x[u]=g[0],d[u]=g[1],m[u]=g[2],s[u]=g[3];i.mask=s}return i.pixels=[x,d,m],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=c,i}function h(t,e){if(!l(t))return null;const{pixels:i,mask:n}=t,r=t.width*t.height,a=i.length;let o=e.lut;const{offset:h}=e;let c,f;o&&1===o[0].length&&(o=i.map((()=>o)));const u=[];let p,x,d;if(h)if(null==n)for(c=0;c<a;c++){for(p=i[c],x=o[c],d=new Uint8Array(r),f=0;f<r;f++)d[f]=x[p[f]-h];u.push(d)}else for(c=0;c<a;c++){for(p=i[c],x=o[c],d=new Uint8Array(r),f=0;f<r;f++)n[f]&&(d[f]=x[p[f]-h]);u.push(d)}else if(null==n)for(c=0;c<a;c++){for(p=i[c],x=o[c],d=new Uint8Array(r),f=0;f<r;f++)d[f]=x[p[f]];u.push(d)}else for(c=0;c<a;c++){for(p=i[c],x=o[c],d=new Uint8Array(r),f=0;f<r;f++)n[f]&&(d[f]=x[p[f]]);u.push(d)}const m=new s.a({width:t.width,height:t.height,pixels:u,mask:n,pixelType:"u8"});return m.updateStatistics(),m}function c(t,e){if(!l(t))return null;const i=t.clone(),{pixels:n}=i,s=i.width*i.height,r=e.length,a=Math.floor(r/2),o=e[Math.floor(a)],h=n[0];let c,f,u,p,x,d,m=!1;const g=new Uint8Array(s),y=new Uint8Array(s),w=new Uint8Array(s);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(s),k.fill(A?255:1),i.mask=k),x=0;x<s;x++)if(k[x]){for(c=h[x],m=!1,d=a,f=o,u=0,p=r-1;p-u>1;){if(c===f.value){m=!0;break}c>f.value?u=d:p=d,d=Math.floor((u+p)/2),f=e[Math.floor(d)]}m||(c===e[u].value?(f=e[u],m=!0):c===e[p].value?(f=e[p],m=!0):c<e[u].value?(m=!1,f=null):c>e[u].value&&(c<e[p].value?(f=e[u],m=!0):p===r-1?(m=!1,f=null):(f=e[p],m=!0))),m?(g[x]=f.mappedColor[0],y[x]=f.mappedColor[1],w[x]=f.mappedColor[2],k[x]=f.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function f(t,e){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||Object(n.j)(i.pixelBlock))return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,l=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(s,l),a=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,a.map((t=>t.extent.xmin))),h=Math.min.apply(null,a.map((t=>t.extent.ymin))),c=Math.max.apply(null,a.map((t=>t.extent.xmax))),f=Math.max.apply(null,a.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-o)/s),y:Math.round((f-e.ymax)/l)},x={width:Math.round((c-o)/s),height:Math.round((f-h)/l)},d={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(x.width/i.pixelBlock.width)*Math.round(x.height/i.pixelBlock.height)!==a.length||u.x<0||u.y<0||x.width<d.width||x.height<d.height?null:{extent:e,pixelBlock:p(a.map((t=>t.pixelBlock)),x,{clipOffset:u,clipSize:d})}}function u(t,e,i,n,s,l){const{width:r,height:a}=i.block,{x:o,y:h}=i.offset,{width:c,height:f}=i.mosaic,u=function(t,e,i,n,s,l,r,a){return{xmin:s<=i*t?0:s<i*t+t?s-i*t:t,ymin:l<=n*e?0:l<n*e+e?l-n*e:e,xmax:s+r<=i*t?0:s+r<i*t+t?s+r-i*t:t,ymax:l+a<=n*e?0:l+a<n*e+e?l+a-n*e:e}}(r,a,n,s,o,h,c,f);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+n*e,s=i+e;i<t&&s>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let d=u.ymin;d<u.ymax;d++){const i=(s*a+d-h)*c+(n*r-o)+p,l=d*r;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e[l+n]}else for(let d=u.ymin;d<u.ymax;d++){const i=(s*a+d-h)*c+(n*r-o)+p;for(let n=u.xmin;n<u.xmax;n++)t[i+n]=e}}function p(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{clipOffset:r,clipSize:a,alignmentInfo:o,blockWidths:h}=i;if(h)return x(t,e,{blockWidths:h});const c=t.find((t=>l(t)));if(Object(n.j)(c))return null;const f=a?a.width:e.width,p=a?a.height:e.height,d=c.width,m=c.height,g=e.width/d,y=e.height/m,w={offset:r||{x:0,y:0},mosaic:a||e,block:{width:d,height:m}},k=c.pixelType,A=s.a.getPixelArrayConstructor(k),b=c.pixels.length,M=[];let j,v,U;for(let n=0;n<b;n++){v=new A(f*p);for(let e=0;e<y;e++)for(let i=0;i<g;i++){const s=t[e*g+i];l(s)&&(j=s.pixels[n],u(v,j,w,i,e,o))}M.push(v)}if(t.some((t=>Object(n.j)(t)||t.mask&&t.mask.length>0))){U=new Uint8Array(f*p);for(let e=0;e<y;e++)for(let i=0;i<g;i++){const s=t[e*g+i];u(U,(Object(n.k)(s)?s.mask:null)||(s?1:0),w,i,e,o)}}const B=new s.a({width:f,height:p,pixels:M,pixelType:k,mask:U});return B.updateStatistics(),B}function x(t,e,i){const r=t.find((t=>Object(n.k)(t)));if(Object(n.j)(r))return null;const a=t.some((t=>!Object(n.k)(t)||!!t.mask)),{width:o,height:h}=e,c=a?new Uint8Array(o*h):null,{blockWidths:f}=i,u=[],p=r.getPlaneCount(),x=s.a.getPixelArrayConstructor(r.pixelType);if(a)for(let n=0,s=0;n<t.length;s+=f[n],n++){const e=t[n];if(!l(e))continue;const i=e.mask;for(let t=0;t<h;t++)for(let l=0;l<f[n];l++)c[t*o+l+s]=null==i?255:i[t*e.width+l]}for(let n=0;n<p;n++){const e=new x(o*h);for(let i=0,s=0;i<t.length;s+=f[i],i++){const r=t[i];if(!l(r))continue;const a=r.pixels[n];if(null!=a)for(let t=0;t<h;t++)for(let n=0;n<f[i];n++)e[t*o+n+s]=a[t*r.width+n]}u.push(e)}const d=new s.a({width:o,height:h,mask:c,pixels:u,pixelType:r.pixelType});return d.updateStatistics(),d}function d(t,e,i){if(!l(t))return null;const{width:n,height:s}=t,r=e.x,a=e.y,o=i.width+r,h=i.height+a;if(r<0||a<0||o>n||h>s)return t;if(0===r&&0===a&&o===n&&h===s)return t;t.mask||(t.mask=new Uint8Array(n*s));const c=t.mask;for(let l=0;l<s;l++){const t=l*n;for(let e=0;e<n;e++)c[t+e]=l<a||l>=h||e<r||e>=o?0:1}return t.updateStatistics(),t}function m(t){if(!l(t))return null;const e=t.clone(),{width:i,height:n,pixels:s,mask:r}=t,a=s[0],o=e.pixels[0];for(let l=2;l<n-1;l++){const t=new Map;for(let n=l-2;n<l+2;n++)for(let e=0;e<4;e++){const s=n*i+e;w(t,a[s],r?r[s]:1)}o[l*i]=g(t),o[l*i+1]=o[l*i+2]=o[l*i];let e=3;for(;e<i-1;e++){let n=(l-2)*i+e+1;w(t,a[n],r?r[n]:1),n=(l-1)*i+e+1,w(t,a[n],r?r[n]:1),n=l*i+e+1,w(t,a[n],r?r[n]:1),n=(l+1)*i+e+1,w(t,a[n],r?r[n]:1),n=(l-2)*i+e-3,y(t,a[n],r?r[n]:1),n=(l-1)*i+e-3,y(t,a[n],r?r[n]:1),n=l*i+e-3,y(t,a[n],r?r[n]:1),n=(l+1)*i+e-3,y(t,a[n],r?r[n]:1),o[l*i+e]=g(t)}o[l*i+e+1]=o[l*i+e]}for(let l=0;l<i;l++)o[l]=o[i+l]=o[2*i+l],o[(n-1)*i+l]=o[(n-2)*i+l];return e.updateStatistics(),e}function g(t){if(0===t.size)return 0;let e=0,i=-1,n=0;const s=t.keys();let l=s.next();for(;!l.done;)n=t.get(l.value),n>e&&(i=l.value,e=n),l=s.next();return i}function y(t,e,i){if(0===i)return;const n=t.get(e);1===n?t.delete(e):t.set(e,n-1)}function w(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function k(t,e,i){let{x:n,y:r}=e;const{width:a,height:o}=i;if(0===n&&0===r&&o===t.height&&a===t.width)return t;const{width:h,height:c}=t,f=Math.max(0,r),u=Math.max(0,n),p=Math.min(n+a,h),x=Math.min(r+o,c);if(p<0||x<0||!l(t))return null;n=Math.max(0,-n),r=Math.max(0,-r);const{pixels:d,mask:m}=t,g=a*o,y=d.length,w=[];for(let l=0;l<y;l++){const e=d[l],i=s.a.createEmptyBand(t.pixelType,g);for(let t=f;t<x;t++){const s=t*h;let l=(t+r-f)*a+n;for(let t=u;t<p;t++)i[l++]=e[s+t]}w.push(i)}const k=new Uint8Array(g);for(let s=f;s<x;s++){const t=s*h;let e=(s+r-f)*a+n;for(let i=u;i<p;i++)k[e++]=m?m[t+i]:1}const A=new s.a({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function A(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!l(t))return null;const{pixels:i,width:n,height:r,mask:a,pixelType:o}=t,h=[],c=Math.round(n/2),f=Math.round(r/2),u=r-1,p=n-1;for(let l=0;l<i.length;l++){const t=i[l],a=s.a.createEmptyBand(o,c*f);let x=0;for(let i=0;i<r;i+=2)for(let s=0;s<n;s+=2){const l=t[i*n+s];if(e){const e=s===p?l:t[i*n+s+1],r=i===u?l:t[i*n+s+n],o=s===p?r:i===u?e:t[i*n+s+n+1];a[x++]=(l+e+r+o)/4}else a[x++]=l}h.push(a)}let x=null;if(a){x=new Uint8Array(c*f);let t=0;for(let i=0;i<r;i+=2)for(let s=0;s<n;s+=2){const l=a[i*n+s];if(e){const e=s===p?l:a[i*n+s+1],r=i===u?l:a[i*n+s+n],o=s===p?r:i===u?e:a[i*n+s+n+1];x[t++]=l*e*r*o?1:0}else x[t++]=l}}return new s.a({width:c,height:f,pixelType:o,pixels:h,mask:x})}function b(t,e,i){if(!l(t))return null;const{width:n,height:s}=e;let{width:r,height:a}=t;const o=new Map,h={x:0,y:0},c=null==i?1:1+i;let f=t;for(let l=0;l<c;l++){const t=Math.ceil(r/n),i=Math.ceil(a/s);for(let r=0;r<i;r++){h.y=r*s;for(let i=0;i<t;i++){h.x=i*n;const t=k(f,h,e);o.set("".concat(l,"/").concat(r,"/").concat(i),t)}}l<c-1&&(f=A(f)),r=Math.round(r/2),a=Math.round(a/2)}return o}function M(t,e,i,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:l,height:r}=t,{width:a,height:o}=e,h=n.cols,c=n.rows,f=Math.ceil(a/h-.1/h),u=Math.ceil(o/c-.1/c);let p,x,d,m,g,y,w;const k=f*h,A=k*u*c,b=new Float32Array(A),M=new Float32Array(A),j=new Uint32Array(A),v=new Uint32Array(A);let U,B,T=0;for(let C=0;C<u;C++)for(let t=0;t<f;t++){p=12*(C*f+t),x=i[p],d=i[p+1],m=i[p+2],g=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){T=(C*c+e)*k+t*h,B=(e+.5)/c;for(let t=0;t<e;t++)U=(t+.5)/h,b[T+t]=(x*U+d*B+m)*l-s,M[T+t]=(g*U+y*B+w)*r-s,j[T+t]=Math.round(b[T+t]),v[T+t]=Math.round(M[T+t])}p+=6,x=i[p],d=i[p+1],m=i[p+2],g=i[p+3],y=i[p+4],w=i[p+5];for(let e=0;e<c;e++){T=(C*c+e)*k+t*h,B=(e+.5)/c;for(let t=e;t<h;t++)U=(t+.5)/h,b[T+t]=(x*U+d*B+m)*l-s,M[T+t]=(g*U+y*B+w)*r-s,j[T+t]=Math.round(b[T+t]),v[T+t]=Math.round(M[T+t])}}return{offsets_x:b,offsets_y:M,offsets_xi:j,offsets_yi:v,gridWidth:k}}function j(t,e){const{coefficients:i,spacing:n}=e,{offsets_x:s,offsets_y:l,gridWidth:r}=M(t,t,i,{rows:n[0],cols:n[1]},.5),{width:a,height:o}=t,h=new Float32Array(a*o),c=180/Math.PI;for(let f=0;f<o;f++)for(let t=0;t<a;t++){const e=f*r+t,i=0===f?e:e-r,n=f===o-1?e:e+r,u=s[i]-s[n],p=l[n]-l[i];if(isNaN(u)||isNaN(p))h[f*a+t]=90;else{let e=Math.atan2(p,u)*c;e=(360+e)%360,h[f*a+t]=e}}return h}function v(t,e,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"nearest";if(!l(t))return null;"majority"===r&&(t=m(t));const{pixels:a,mask:o,pixelType:h}=t,c=t.width,f=t.height,u=s.a.getPixelArrayConstructor(h),p=a.length,{width:x,height:d}=e;let g=!1;for(let s=0;s<i.length;s+=3)-1===i[s]&&-1===i[s+1]&&-1===i[s+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:A,gridWidth:b}=M({width:c,height:f},e,i,n,"majority"===r?0:.5);let j;const v=(t,e,i)=>{const n=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<d;s++){j=s*b;for(let l=0;l<x;l++){if(y[j]<0||w[j]<0)t[s*x+l]=0;else if(i)t[s*x+l]=e[k[j]+A[j]*c];else{const i=Math.floor(y[j]),r=Math.floor(w[j]),a=Math.ceil(y[j]),h=Math.ceil(w[j]),f=y[j]-i,u=w[j]-r;if(!o||o[i+r*c]&&o[i+r*c]&&o[i+h*c]&&o[a+h*c]){const o=(1-f)*e[i+r*c]+f*e[a+r*c],p=(1-f)*e[i+h*c]+f*e[a+h*c];t[s*x+l]=(1-u)*o+u*p+n}else t[s*x+l]=e[k[j]+A[j]*c]}j++}}},U=[];let B;for(let s=0;s<p;s++)B=new u(x*d),v(B,a[s],"nearest"===r||"majority"===r),U.push(B);const T=new s.a({width:x,height:d,pixelType:h,pixels:U});if(o)T.mask=new Uint8Array(x*d),v(T.mask,o,!0);else if(g){T.mask=new Uint8Array(x*d);for(let t=0;t<x*d;t++)T.mask[t]=y[t]<0||w[t]<0?0:1}return T.updateStatistics(),T}},449:function(t,e,i){"use strict";i.d(e,"a",(function(){return d}));var n,s=i(136),l=(i(135),i(145)),r=i(150),a=i(147),o=i(143),h=i(134),c=i(139),f=i(217),u=i(137);const p=o.a.getLogger("esri.layers.support.PixelBlock");let x=n=class extends r.a{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(n.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.a("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,l=this.pixels,r=this.width*this.height,a=l.length;let o,h,c;const f=[];for(let u=0;u<a;u++){c=n.createEmptyBand(t,r),o=l[u];for(let t=0;t<r;t++)h=o[t],c[t]=h>s?s:h<i?i:h;f.push(c)}this.pixels=f,this.pixelType=t}extractBands(t){if(Object(h.j)(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),s=e===t.length&&!t.some(((t,e)=>t!==e));return i||s?this:new n({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new n({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=n.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const n=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=n?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Object(a.a)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:n}=this;if(!t||!n||!n.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,l,r,a;s=l=r=n[0],n.length>=3?(l=n[1],r=n[2]):2===n.length&&(l=n[1]);const o=new Uint32Array(t),h=this.width*this.height;if(s.length===h)if(e&&e.length===h)if(i)for(a=0;a<h;a++)e[a]&&(o[a]=e[a]<<24|r[a]<<16|l[a]<<8|s[a]);else for(a=0;a<h;a++)e[a]&&(o[a]=255<<24|r[a]<<16|l[a]<<8|s[a]);else for(a=0;a<h;a++)o[a]=255<<24|r[a]<<16|l[a]<<8|s[a];else p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:n}=this;if(!t||!e||!e.length)return void p.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const s=this.pixelType;let l=1,r=0,a=1;if(n&&n.length>0)r=n.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),a=n.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/a;else{let t=255;"s8"===s?(r=-128,t=127):"u16"===s?t=65535:"s16"===s?(r=-32768,t=32767):"u32"===s?t=4294967295:"s32"===s?(r=-2147483648,t=2147483647):"f32"===s?(r=-34e38,t=34e38):"f64"===s&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const o=new Uint32Array(t),h=this.width*this.height;let c,f,u,x,d;if(c=f=u=e[0],c.length!==h)return p.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(u=e[2]),i&&i.length===h)for(x=0;x<h;x++)i[x]&&(o[x]=255<<24|(u[x]-r)*l<<16|(f[x]-r)*l<<8|(c[x]-r)*l);else for(x=0;x<h;x++)o[x]=255<<24|(u[x]-r)*l<<16|(f[x]-r)*l<<8|(c[x]-r)*l;else if(i&&i.length===h)for(x=0;x<h;x++)d=(c[x]-r)*l,i[x]&&(o[x]=255<<24|d<<16|d<<8|d);else for(x=0;x<h;x++)d=(c[x]-r)*l,o[x]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let n,s,l,r;n=s=l=e[0],e.length>=3?(s=e[1],l=e[2]):2===e.length&&(s=e[1]);const a=this.width*this.height;if(n.length!==a)return p.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if(i&&i.length===a)for(r=0;r<a;r++)t[o++]=n[r],t[o++]=s[r],t[o++]=l[r],t[o++]=1&i[r];else for(r=0;r<a;r++)t[o++]=n[r],t[o++]=s[r],t[o++]=l[r],t[o++]=1}_calculateBandStatistics(t,e){let i=1/0,n=-1/0;const s=t.length;let l,r=0;if(e)for(l=0;l<s;l++)e[l]&&(r=t[l],i=r<i?r:i,n=r>n?r:n);else for(l=0;l<s;l++)r=t[l],i=r<i?r:i,n=r>n?r:n;return{minValue:i,maxValue:n}}};Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"width",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"height",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"pixelType",void 0),Object(s.a)([Object(f.a)("pixelType")],x.prototype,"castPixelType",null),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"validPixelCount",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"mask",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"maskIsAlpha",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"pixels",void 0),Object(s.a)([Object(c.b)({json:{write:!0}})],x.prototype,"statistics",void 0),x=n=Object(s.a)([Object(u.a)("esri.layers.support.PixelBlock")],x);const d=x}}]);