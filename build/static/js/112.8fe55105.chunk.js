(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[112],{639:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return z}));var a=r(137),o=(r(164),r(209)),i=(r(245),r(186)),l=r(146),n=r(148),s=r(135),y=r(248),p=r(313),c=r(408),b=r(140),u=(r(139),r(174)),d=r(138),O=r(177),m=r(240),f=r(264),j=r(171),g=r(381),S=r(984),h=r(261),v=r(857),w=r(317),N=r(282),J=r(285),L=r(286),x=r(337),T=r(442),C=r(400),M=r(418),I=r(554),R=r(170),D=r(161);function E(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const _=new x.a({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),F=new x.a({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let G=class extends S.a{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get sublayers(){return this.graphics}};Object(a.a)([Object(b.b)({readOnly:!0})],G.prototype,"sublayers",null),Object(a.a)([Object(b.b)()],G.prototype,"layer",void 0),Object(a.a)([Object(b.b)()],G.prototype,"layerId",void 0),Object(a.a)([Object(b.b)({readOnly:!0})],G.prototype,"visibilityMode",void 0),G=Object(a.a)([Object(d.a)("esri.layers.MapNotesLayer.MapNotesSublayer")],G);const P=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new T.a).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new C.a).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new M.a).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new M.a).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new I.a).toJSON()}];let k=class extends(Object(w.a)(Object(L.a)(Object(N.a)(Object(J.a)(Object(y.a)(h.a)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=R.a.WGS84,this.sublayers=new i.a(P.map((e=>new G({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!E(t)&&"portal-item"!==(null===r||void 0===r?void 0:r.origin)}}}readFeatureCollections(e,t,r){if(!E(t))return null;const a=t.layers.map((e=>{const t=new g.default;return t.read(e,r),t}));return new i.a({items:a})}readLegacyfeatureCollectionJSON(e,t){return E(t)?Object(n.a)(t.featureCollection):null}readFullExtent(e,t){if(!t.layers.length||t.layers.every((e=>!e.layerDefinition.extent)))return new D.a({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:R.a.WGS84});const r=R.a.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?D.a.fromJSON(r).union(e):e}),new D.a({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?R.a.fromJSON(t.layers[0].layerDefinition.spatialReference):R.a.WGS84}readSublayers(e,t,r){if(E(t))return null;const a=[];let l=t.layers.reduce(((e,t)=>{var r;return Math.max(e,null!==(r=t.layerDefinition.id)&&void 0!==r?r:-1)}),-1)+1;for(const{layerDefinition:i,featureSet:y}of t.layers){var n,s;const e=null!==(n=i.geometryType)&&void 0!==n?n:y.geometryType,t=null!==(s=i.id)&&void 0!==s?s:l++,r=P.find((t=>{var r,a,o;return e===t.geometryTypeJSON&&(null===(r=i.drawingInfo)||void 0===r||null===(a=r.renderer)||void 0===a||null===(o=a.symbol)||void 0===o?void 0:o.type)===t.identifyingSymbol.type}));if(r){const e=new G({id:r.id,title:i.name,layerId:t,layer:this,graphics:y.features.map((e=>{let{geometry:t,symbol:r,attributes:a,popupInfo:i}=e;return o.a.fromJSON({attributes:a,geometry:t,symbol:r,popupTemplate:i})}))});a.push(e)}}return new i.a(a)}writeSublayers(e,t,r,a){var o;const{minScale:i,maxScale:n}=this;if(Object(s.j)(e))return;const y=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(y&&(null===a||void 0===a||null===(o=a.messages)||void 0===o||o.push(new l.a("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const c=[];let b=this.spatialReference.toJSON();e:for(const l of e)for(const e of l.graphics)if(Object(s.k)(e.geometry)){b=e.geometry.spatialReference.toJSON();break e}for(const l of P){const t=e.find((e=>l.id===e.id));this._writeMapNoteSublayer(c,t,l,i,n,b,a)}Object(p.c)("featureCollection.layers",c,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=Object(n.a)(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(Object(s.j)(this.sublayers))return;let e=null;const t=[];for(const a of this.sublayers)for(const r of a.graphics)if(Object(s.k)(r.geometry)){const a=r.geometry;e?Object(j.d)(a.spatialReference,e)||(Object(m.a)(a.spatialReference,e)||Object(m.e)()||await Object(m.f)(),r.geometry=Object(m.g)(a,e)):e=a.spatialReference,t.push(r)}const r=await Object(f.a)(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){var t,r;return Object(s.j)(this.sublayers)?null:null!==(t=null===(r=this.sublayers)||void 0===r?void 0:r.find((t=>t.id===e)))&&void 0!==t?t:null}_writeMapNoteSublayer(e,t,r,a,o,i,l){const y=[];if(!Object(s.j)(t)){for(const e of t.graphics)this._writeMapNote(y,e,r.geometryType,l);this._normalizeObjectIds(y,_),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:Object(n.a)(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:a,maxScale:o,objectIdField:"OBJECTID",fields:[_.toJSON(),F.toJSON()],spatialReference:i},featureSet:{features:y,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,a){var o,i;if(Object(s.j)(t))return;const{geometry:l,symbol:n,popupTemplate:y}=t;if(Object(s.j)(l))return;if(l.type!==r)return void(null===a||void 0===a||null===(o=a.messages)||void 0===o||o.push(new c.a("map-notes-layer:invalid-geometry-type",'Geometry "'.concat(l.type,'" cannot be saved in "').concat(r,'" layer'),{graphic:t})));if(Object(s.j)(n))return void(null===a||void 0===a||null===(i=a.messages)||void 0===i||i.push(new c.a("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const p={attributes:{...t.attributes},geometry:l.toJSON(),symbol:n.toJSON()};Object(s.k)(y)&&(p.popupInfo=y.toJSON()),e.push(p)}_normalizeObjectIds(e,t){const r=t.name;let a=Object(v.a)(r,e)+1;const o=new Set;for(const i of e){i.attributes||(i.attributes={});const{attributes:e}=i;(null==e[r]||o.has(e[r]))&&(e[r]=a++),o.add(e[r])}}};Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"capabilities",void 0),Object(a.a)([Object(u.a)(["portal-item","web-map"],"capabilities",["layers"])],k.prototype,"readCapabilities",null),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"featureCollections",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"featureCollections",["layers"])],k.prototype,"readFeatureCollections",null),Object(a.a)([Object(b.b)({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],k.prototype,"featureCollectionJSON",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],k.prototype,"readLegacyfeatureCollectionJSON",null),Object(a.a)([Object(b.b)({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],k.prototype,"featureCollectionType",void 0),Object(a.a)([Object(b.b)({json:{write:!1}})],k.prototype,"fullExtent",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"fullExtent",["layers"])],k.prototype,"readFullExtent",null),Object(a.a)([Object(b.b)({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],k.prototype,"legendEnabled",void 0),Object(a.a)([Object(b.b)({type:["show","hide"]})],k.prototype,"listMode",void 0),Object(a.a)([Object(b.b)({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"minScale",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"minScale",["layers"])],k.prototype,"readMinScale",null),Object(a.a)([Object(b.b)({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"maxScale",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"maxScale",["layers"])],k.prototype,"readMaxScale",null),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"multipointLayer",null),Object(a.a)([Object(b.b)({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],k.prototype,"operationalLayerType",void 0),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"pointLayer",null),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"polygonLayer",null),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"polylineLayer",null),Object(a.a)([Object(b.b)({type:R.a})],k.prototype,"spatialReference",void 0),Object(a.a)([Object(u.a)(["web-map","portal-item"],"spatialReference",["layers"])],k.prototype,"readSpatialReference",null),Object(a.a)([Object(b.b)({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],k.prototype,"sublayers",void 0),Object(a.a)([Object(u.a)("web-map","sublayers",["layers"])],k.prototype,"readSublayers",null),Object(a.a)([Object(O.a)("web-map","sublayers")],k.prototype,"writeSublayers",null),Object(a.a)([Object(b.b)({readOnly:!0})],k.prototype,"textLayer",null),Object(a.a)([Object(b.b)()],k.prototype,"title",void 0),Object(a.a)([Object(b.b)({readOnly:!0,json:{read:!1}})],k.prototype,"type",void 0),k=Object(a.a)([Object(d.a)("esri.layers.MapNotesLayer")],k);const z=k},857:function(e,t,r){"use strict";r.d(t,"a",(function(){return o})),r.d(t,"b",(function(){return a}));const a=1;function o(e,t){let r=0;for(const o of t){var a;const t=null===(a=o.attributes)||void 0===a?void 0:a[e];"number"==typeof t&&isFinite(t)&&(r=Math.max(r,t))}return r}}}]);