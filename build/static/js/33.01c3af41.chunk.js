(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[33],{503:function(e,t,i){"use strict";i.d(t,"a",(function(){return l})),i.d(t,"b",(function(){return r}));var a=i(273);const r={type:a.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:l}}}}};function l(e,t,i,r){if(!e)return null;const{minScale:l,maxScale:n,minLOD:o,maxLOD:s}=t;if(null!=o&&null!=s)return r&&r.ignoreMinMaxLOD?a.a.fromJSON(e):a.a.fromJSON({...e,lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=o&&t<=s}))});if(0!==l&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=l?t(l):1/0,r=n?t(n):-1/0;return a.a.fromJSON({...e,lods:e.lods.filter((e=>{const a=t(e.scale);return a<=i&&a>=r}))})}return a.a.fromJSON(e)}},514:function(e,t,i){"use strict";i.d(t,"a",(function(){return T}));var a,r=i(137),l=i(167),n=i(163),o=i(457),s=i(146),c=i(202),h=i(144),p=i(395),u=i(437),d=i(149),b=i(162),v=i(352),m=i(168),y=i(140),f=i(142),O=(i(136),i(230)),j=i(138),g=i(148);class _{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,r=i>>3,l=this._tileAvailabilityBitSet;return r<0||r>l.length?"unknown":l[r]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,r=!0;const l=Math.ceil(t*i/8),n=new Uint8Array(l);let o=0;for(let s=0;s<e.length;s++){const t=s%8;e[s]?(r=!1,n[o]|=1<<t):a=!1,7===t&&++o}r?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||l.default,{row:a,col:r,width:n,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);else{const i=e.service.tileServers;t="".concat(i&&i.length?i[e.row%i.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}const i=e.service.query;return i&&(t="".concat(t,"?").concat(i)),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:r,width:n,height:o},valid:!0,data:Object(f.b)(n*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==r||e.location.width!==n||e.location.height!==o))throw new s.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:r,width:n,height:o}});return _.fromJSON(e)}))}static fromJSON(e){_._validateJSON(e);const t=new _;return t.location=Object.freeze(Object(g.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new s.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new s.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new s.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new s.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new s.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function w(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}const S=h.a.getLogger("esri.layers.support.TilemapCache");let T=a=class extends(Object(c.b)(n.a)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.a.MEGABYTES,this.request=l.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new p.a(this.cacheByteSize),this.own([Object(b.e)((()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition())),Object(b.e)((()=>{var e,t;return null===(e=this.layer)||void 0===e||null===(t=e.tileInfo)||void 0===t?void 0:t.lods}),(e=>this._initializeAvailableLevels(e)),b.d)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(S.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new s.a("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const r=this._tmpTilemapDefinition,l=this._tilemapFromCache(e,t,i,r);if(l)return Promise.resolve(l);const n=a&&a.signal;return a={...a,signal:null},new Promise(((e,t)=>{Object(d.m)(n,(()=>t(Object(d.b)())));const i=w(r);let l=this._pendingTilemapRequests[i];if(!l){l=_.fromDefinition(r,a).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=l,l.then(e,e)}l.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch((e=>e)).then((a=>{if(a instanceof _){const r=a.getAvailability(t,i);if("unavailable"===r)throw new s.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return r}if(Object(d.j)(a))throw a;return"unknown"})):Promise.reject(new s.a("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")))}fetchAvailabilityUpsample(e,t,i,a,r){a.level=e,a.row=t,a.col=i;const l=this.layer.tileInfo;l.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,r).catch((e=>{if(Object(d.j)(e))throw e;if(l.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,r,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,l,n){if(!this._prefetchingEnabled)return;const o="prefetch-".concat(e);if(this.handles.has(o))return;const s=new AbortController;n.then((()=>s.abort()),(()=>s.abort()));let c=!1;const h={remove(){c||(c=!0,s.abort())}};if(this.handles.add(h,o),await Object(v.c)(10,s.signal).catch((()=>{})),c||(c=!0,this.handles.remove(o)),Object(d.k)(s))return;const p={id:e,level:t,row:i,col:r},u={...l,signal:s.signal},b=this.layer.tileInfo;for(let d=0;a._prefetches.length<a._maxPrefetch&&b.upsampleTile(p);++d){const e=this.fetchAvailability(p.level,p.row,p.col,u);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:Object(m.G)({...t.query,...a,token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const r=w(a);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};T._maxPrefetch=4,T._prefetches=new u.a({initialSize:a._maxPrefetch}),Object(r.a)([Object(y.b)({constructOnly:!0,type:Number})],T.prototype,"levels",void 0),Object(r.a)([Object(O.a)("levels")],T.prototype,"castLevels",null),Object(r.a)([Object(y.b)({readOnly:!0,type:Number})],T.prototype,"size",null),Object(r.a)([Object(y.b)({constructOnly:!0,type:Number})],T.prototype,"cacheByteSize",void 0),Object(r.a)([Object(y.b)({constructOnly:!0})],T.prototype,"layer",void 0),Object(r.a)([Object(y.b)({constructOnly:!0})],T.prototype,"request",void 0),T=a=Object(r.a)([Object(j.a)("esri.layers.support.TilemapCache")],T)},615:function(e,t,i){"use strict";i.d(t,"a",(function(){return h}));var a=i(137),r=(i(164),i(140)),l=(i(142),i(136),i(139),i(174)),n=i(138),o=i(503),s=i(514),c=i(170);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new s.a({layer:this}):null}};return Object(a.a)([Object(r.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(r.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(l.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(r.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(l.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(r.b)({type:c.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(r.b)({readOnly:!0})],t.prototype,"supportsBlankTile",null),Object(a.a)([Object(r.b)(o.b)],t.prototype,"tileInfo",void 0),Object(a.a)([Object(r.b)()],t.prototype,"tilemapCache",void 0),Object(a.a)([Object(l.a)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),Object(a.a)([Object(r.b)()],t.prototype,"version",void 0),t=Object(a.a)([Object(n.a)("esri.layers.mixins.ArcGISCachedService")],t),t}},661:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return A}));var a=i(137),r=i(167),l=i(146),n=i(144),o=i(135),s=i(248),c=i(149),h=i(168),p=i(140),u=i(142),d=(i(136),i(139),i(174)),b=i(138),v=i(499),m=i(261),y=i(615),f=i(423),O=i(282),j=i(285),g=i(242),_=i(440),w=i(434);const S=n.a.getLogger("esri.core.workers.WorkerHandle");class T extends class{constructor(e,t,i,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this._mainMethod=t,this._transferLists=i,this._listeners=[],this._promise=Object(w.b)(e,{...r,schedule:a}).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,r.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>S.error("Failed to initialize ".concat(e," worker: ").concat(t))))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),Object(_.b)((()=>{i.removed=!0,Object(u.i)(this._listeners,i),this._thread&&Object(o.k)(i.threadHandle)&&i.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const a=this._transferLists[e],r=a?a(t):[];return this._thread.invoke(e,t,{transferList:r,signal:i})}return this._promise?this._promise.then((()=>(Object(c.p)(i),this.invokeMethod(e,t,i)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;super("LercWorker","_decode",{_decode:e=>[e.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(L.forEach(((e,t)=>{e===this&&L.delete(t)})),this.destroy())}}const L=new Map;const x=n.a.getLogger("esri.layers.ElevationLayer");let D=class extends(Object(y.a)(Object(f.a)(Object(O.a)(Object(j.a)(Object(s.a)(m.a)))))){constructor(){super(...arguments),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=L.get(Object(o.q)(e));return t||(Object(o.k)(e)?(t=new T((t=>e.schedule(t))),L.set(e,t)):(t=new T,L.set(null,t))),++t.ref,t}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=Object(o.o)(this._lercDecoder)}set minScale(e){this.constructed&&x.warn("".concat(this.declaredClass,".minScale support has been removed (since 4.5)"))}get minScale(){}set maxScale(e){this.constructed&&x.warn("".concat(this.declaredClass,".maxScale support has been removed (since 4.5)"))}get maxScale(){}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=Object(o.k)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new l.a("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(c.o).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const l=Object(o.k)((a=a||{signal:null}).signal)?a.signal:a.signal=(new AbortController).signal,n={responseType:"array-buffer",signal:l},s={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>Object(r.default)(this.getTileUrl(e,t,i),n))).then((e=>this._lercDecoder.decode(e.data,s,l))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,r=Object(h.G)({...this.parsedUrl.query,blankTile:!a&&null});return"".concat(this.parsedUrl.path,"/tile/").concat(e,"/").concat(t,"/").concat(i).concat(r?"?"+r:"")}async queryElevation(e,t){const{ElevationQuery:a}=await i.e(13).then(i.bind(null,1356));return Object(c.p)(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await i.e(13).then(i.bind(null,1356));return Object(c.p)(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await Object(r.default)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};Object(a.a)([Object(p.b)({json:{read:{source:"copyrightText"}}})],D.prototype,"copyright",void 0),Object(a.a)([Object(p.b)({readOnly:!0,type:v.a})],D.prototype,"heightModelInfo",void 0),Object(a.a)([Object(p.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],D.prototype,"path",void 0),Object(a.a)([Object(p.b)({type:["show","hide"]})],D.prototype,"listMode",void 0),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],D.prototype,"minScale",null),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],D.prototype,"maxScale",null),Object(a.a)([Object(p.b)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],D.prototype,"opacity",void 0),Object(a.a)([Object(p.b)({type:["ArcGISTiledElevationServiceLayer"]})],D.prototype,"operationalLayerType",void 0),Object(a.a)([Object(p.b)()],D.prototype,"sourceJSON",void 0),Object(a.a)([Object(p.b)({json:{read:!1},value:"elevation",readOnly:!0})],D.prototype,"type",void 0),Object(a.a)([Object(p.b)(g.o)],D.prototype,"url",void 0),Object(a.a)([Object(p.b)()],D.prototype,"version",void 0),Object(a.a)([Object(d.a)("version",["currentVersion"])],D.prototype,"readVersion",null),D=Object(a.a)([Object(b.a)("esri.layers.ElevationLayer")],D),D.prototype.fetchTile.__isDefault__=!0;const A=D}}]);