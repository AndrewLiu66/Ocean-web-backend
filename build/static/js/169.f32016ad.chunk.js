(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[169],{1187:function(e,t,a){"use strict";a.r(t),a.d(t,"execute",(function(){return o}));var s=a(145),r=a(134);let n;function o(e,t){let a=t.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",t.responseType=a;const o=Object(r.q)(t.signal);return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:o}).then((async r=>{let i,l,c,u,b;if(r.data)if(r.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(i=new Blob([r.data]),"json"!==a&&"text"!==a||(n||(n=new FileReaderSync),u=n.readAsText(i),"json"!==a)))){try{l=JSON.parse(u||null)}catch(p){const a={...p,url:e,requestOptions:t};throw new s.a("request:server",p.message,a)}if(l.error){const a={...l.error,url:e,requestOptions:t};throw new s.a("request:server",l.error.message,a)}}}else"native"===a&&(r.data.signal=o,c=await fetch(r.data.url,r.data));switch(a){case"blob":b=i;break;case"json":b=l;break;case"native":b=c;break;case"text":b=u;break;default:b=r.data}return{data:b,requestOptions:t,ssl:r.ssl,url:e}}))}}}]);