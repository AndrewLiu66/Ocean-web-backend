(this["webpackJsonpmatx-react-pro"]=this["webpackJsonpmatx-react-pro"]||[]).push([[184],{1311:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return y}));var n=r(137),i=r(146),a=r(135),s=r(162),o=r(140),c=(r(142),r(136),r(139),r(138)),l=r(274),d=r(901),p=r(326);function u(e,t){if(Object(a.j)(e)&&Object(a.j)(t))return null;const r={};return Object(a.k)(t)&&(r.geometry=t.toJSON()),Object(a.k)(e)&&(r.where=e),r}let h=class extends d.default{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([Object(s.e)((()=>{var e;return null===(e=this.layer)||void 0===e?void 0:e.purgeOptions}),(()=>this._update())),Object(s.e)((()=>this.suspended),(e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()}))])}get connectionError(){if(this.errorString)return new i.a("stream-controller",this.errorString)}on(e,t){"data-received"===e&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),n=this;return{remove(){r.remove(),"data-received"===e&&(n._proxy.closed||n.hasEventListener("data-received")||n._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!this.layer.timeInfo.endField&&!this.layer.timeInfo.startField)throw new i.a("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then((e=>{const t=l.default.fromJSON(e);return t.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),t}))}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t="".concat(JSON.stringify(this.layer.purgeOptions),".").concat(JSON.stringify(u(this.layer.definitionExpression,this.layer.geometryDefinition)),")");return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map((e=>e.toJSON())),n=Object(p.b)(e.geometryType),i=e.timeInfo&&e.timeInfo.toJSON()||null,a=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:n,objectIdField:t,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:u(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:a,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};Object(n.a)([Object(o.b)()],h.prototype,"errorString",void 0),Object(n.a)([Object(o.b)({readOnly:!0})],h.prototype,"connectionError",null),Object(n.a)([Object(o.b)()],h.prototype,"connectionStatus",void 0),h=Object(n.a)([Object(c.a)("esri.views.2d.layers.StreamLayerView2D")],h);const y=h}}]);